[{"title":"用编程思想学摄影","url":"https://joway.wang/posts/摄影/2016-04-10-摄影技巧.html","content":"<p>我所理解的编程的思想就是从一件事物的本身定义声明出发，找到其具体实现原理，然后就可以随心所欲调用。半年前开始捣鼓摄影，开始还有点新鲜感，但是后来越玩越觉得枯燥，一些书籍和教程只是对于不同的应用场景，告诉你不同的参数，然后说中央已经决定了，这种场景就该设这些参数，然后你只能傻傻背诵”苟利国家生死以，岂因祸福避趋之”了。</p>\n<a id="\"more\""></a>\n<p>我向来不觉得摄影有多玄乎，本身的成像技术已经摆在那里，几乎就是初中的物理常识，要说参数，也无非就是那么四五个基本参数，辅以图像学的进阶知识进行后期。与软件行业的芜杂约定和限制比起来，简直不值得一提。(当然，纯粹是从入门级角度来看，并不是针对高阶的像素级别的摄影层次)</p>\n<p>终于，我实在是受不了部分摄影圈子的盲目崇拜，故弄玄虚的氛围了，抽了点时间，按照学编程的思路，对每个参数背景挖了一遍，当挖完以后，我才开始明白过来，照像机本身就只是一个工具，知其然与所以然之后，根本不需要去想面对的这幅画按照规范的做法，应该调多大光圈，设多少感光度。事实上，你只需要管自己的视觉判断，觉得想保留多少光亮，想突出哪个部分，然后依照已知晓的原理，具体落实到每个参数中去。</p>\n<p>当明白了这点以后，我才懂得为何摄影与其它都是艺术一样，都是一门可以表达自身思想的载物。接下来，只有一门钢琴是我还不明白究竟为何靠着机械的弹奏竟然能够表达思想的了。</p>\n<h2 id="\"术语与对应作用及原理\""><a href="\"#术语与对应作用及原理\"" class="\"headerlink\"" title="\"术语与对应作用及原理:\""></a>术语与对应作用及原理:</h2><h3 id="\"ISO-感光度\""><a href="\"#ISO-感光度\"" class="\"headerlink\"" title="\"ISO" 感光度:\"=""></a>ISO 感光度:</h3><h5 id="\"名词含义\""><a href="\"#名词含义\"" class="\"headerlink\"" title="\"名词含义:\""></a>名词含义:</h5><p>ISO感光度是CCD/CMOS（或胶卷）对光线的敏感程度(即对光线的化学反应速度)。</p>\n<h5 id="\"实现原理\""><a href="\"#实现原理\"" class="\"headerlink\"" title="\"实现原理" :\"=""></a>实现原理 :</h5><p>数码相机通过改变感光芯片里讯号放大器的放大倍数来改变iso值，但当提升iso值时，放大器也会<br>感光器件都有一个反应能力，这个反应能力是固定不变的，提升数码相机的ISO通过以下方法:</p>\n<p>在软件层面是通过两种方式实现的：</p>\n<ol>\n<li>强行提高每个像素点的亮度和对比度；</li>\n<li>使用多个像素点共同完成原来只要一个像素点来完成的任务。</li>\n</ol>\n<p>例如: 标准的ISO100是对感光元件的每个像素点感光，要提高到ISO200的感光度，只需要把2个像素点当成1个点来感光，就能获得原本2倍的感光速度，如果要提高到ISO400的水平，以此类推只要把4个像素点当成1个点来感光，便能获得4倍的感光速度。这种方法对高分辨率机器有优势。</p>\n<p>在硬件层面，通过</p>\n<ol>\n<li>电子信号放大增益技术.把传感器中讯号中的噪声放大，从而在提升亮度的同时，产生粗微粒的影像。</li>\n</ol>\n<h5 id="\"副作用-噪点\""><a href="\"#副作用-噪点\"" class="\"headerlink\"" title="\"副作用:" 噪点:\"=""></a>副作用: 噪点:</h5><p>噪点原因: 内部的影像传感器在工作中一定受到不同程度的来周边电路和本身像素间的光电磁干扰，从而形成噪点。而电子信号强行增大后，其自身携带的噪点信号也会被同样增大。而对于才用像素点合并的方法来提升iso的方式，由于像素成倍减少了，所以为了保证原有的像素大小尺寸，会将原有信息扩大，导致噪点信息部分像素也被扩大了。</p>\n<p>当然，目前主流单反性能已经提升了很快了，在硬件软件上都有很大优化，所以一般的iso不会产生太大的噪点。</p>\n<p>所以，提升ISO以后对画质的损失是很大的。在像素相等的情况下，CCD/CMOS面积越大，高ISO的成像质量越好。也就是说：在CCD/CMOS面积一定的情况下，里面增加更多的像素反而会造成图像质量的下降。所以现在的数码相机不应该在1000万像素以上再简单增加几百万像素，而应该在提高CCD/CMOS质量上下功夫。</p>\n<h5 id="\"实践检验\""><a href="\"#实践检验\"" class="\"headerlink\"" title="\"实践检验:\""></a>实践检验:</h5><p>在弱光场合比如昏暗的室内，午夜的街头，ISO100时即使光圈开到最大，快门速度也需1/4秒甚至更慢才能正确曝光，这时手一晃照片就糊。</p>\n<hr>\n<h3 id="\"快门\""><a href="\"#快门\"" class="\"headerlink\"" title="\"快门\""></a>快门</h3><h4 id="\"名词含义-1\""><a href="\"#名词含义-1\"" class="\"headerlink\"" title="\"名词含义:\""></a>名词含义:</h4><p>快门就是相机里控制曝光时间的装置。 </p>\n<h4 id="\"实践检验-1\""><a href="\"#实践检验-1\"" class="\"headerlink\"" title="\"实践检验:\""></a>实践检验:</h4><p>手持相机拍摄的安全速度原则：安全速度是焦距的倒数.</p>\n<h3 id="\"光圈\""><a href="\"#光圈\"" class="\"headerlink\"" title="\"光圈\""></a>光圈</h3><h4 id="\"名词含义-2\""><a href="\"#名词含义-2\"" class="\"headerlink\"" title="\"名词含义:\""></a>名词含义:</h4><p>镜头里调节进光孔大小的装置。</p>\n<h5 id="\"实现原理-1\""><a href="\"#实现原理-1\"" class="\"headerlink\"" title="\"实现原理" :\"=""></a>实现原理 :</h5><p>所有相机都基于小孔成像原理：拿一个密封箱子，在任何一面钻个小圆孔，然后把有孔的这面对着窗外，窗外的景象比如一棵树什么的，就会在圆孔对面的箱内壁生成此树的倒影。假如我们在内壁涂上感光材料（装上胶卷或CCD/CMOS），这个有孔的箱子就是一台完整的照相机了。这就是针孔相机。 </p>\n<p>但是如果拿小孔来作为光圈的话，入光量又太小了，曝光一次就要几个小时甚至几天。所以单反相机都采用了凸镜的聚光功能。今天数码相机的各种镜头都是几块凹凸镜的排列组合。为了应付不同的光线强度，我们还需要给镜头装上能够调节这个洞的大小的装置，以便在强光时缩小为针孔，弱光时开成大洞。这个装置就是光圈。如今相机通过在镜头内部加入多边形或者圆形，并且面积可变的孔状光栅来达到控制镜头通光量。</p>\n<h4 id="\"参数细节\""><a href="\"#参数细节\"" class="\"headerlink\"" title="\"参数细节:\""></a>参数细节:</h4><p>光圈F值=镜头的焦距/镜头光圈的直径。 (所以长焦才会那么贵吧)</p>\n<p>常见的光圈值如下： F1， F1.4， F2， F2.8， F4， F5.6， F8， F11， F16， F22， F32， F44， F64。</p>\n<p>光圈的档位设计是:</p>\n<ul>\n<li>相邻的两档的数值相差1.4倍（2的平方根1.414的近似值）</li>\n<li>透光孔直径相差根号2倍，</li>\n<li>透光孔的面积相差一倍， </li>\n<li>底片上形成的影像的亮度相差一倍，</li>\n<li>维持相同曝光量所需要的时间相差一倍。</li>\n</ul>\n<p>例如光圈从F4调整到F2.8，进光量便多一倍；</p>\n<p>光圈值和光圈实际大小是相反的.最小光圈F22时光圈跟针孔差不多.</p>\n<p>镜头在中等光圈的时候成像最好（图片最清晰）。 成像最好的那档光圈为最佳光圈。</p>\n<p>光圈大一级，镜片就大很多，加工难度大。价格也就增加一个数量级。</p>\n<h4 id="\"实践检验-2\""><a href="\"#实践检验-2\"" class="\"headerlink\"" title="\"实践检验:\""></a>实践检验:</h4><ol>\n<li>控制进光量，这直接影响到图片是否能正确曝光，是拍摄成功与否的关键；</li>\n<li>控制景深，光圈越小，景深越大。虽然焦距和拍摄远近都影响景深，但焦距和被摄物远近的改变同时也会影响构图，如果构图确定，我们能控制景深的武器就只剩下光圈了；</li>\n<li>光圈影响图片的清晰度，任何一个镜头都是在中等光圈的时候成像最好（图片最清晰），在最大光圈和最小光圈的时候解像度差。</li>\n</ol>\n<hr>\n<h3 id="\"曝光\""><a href="\"#曝光\"" class="\"headerlink\"" title="\"曝光\""></a>曝光</h3><h4 id="\"名词解释\""><a href="\"#名词解释\"" class="\"headerlink\"" title="\"名词解释:\""></a>名词解释:</h4><p>照像机的成像模型:</p>\n<p>假设一个黑乎乎的密闭房间，一面墙壁上开了个小圆窗户，窗对面的内壁上安上感光材料（白沥青，大型胶卷或CCD/CMOS）。这就是一台大型房式照相机。在没有打开小窗之前，房间里是黑乎乎的。<br>我们打开小窗，光线从小孔而入，射到对面墙壁的胶卷上，产生光化反应（或光电反应，如果是CCD/CMOS），照片就诞生了。此过程就叫做曝光。要得正确曝光的图片，必须精确决定曝光量。所谓曝光量就是让多少光进入这个密闭房间里。如果进光量太大，照片就会白花花一片，晚上变成了白天。如果进光量太小，照片就会黑乎乎的，白人变成黑人。</p>\n<p>曝光量就是进入光的量， 光圈和快门两样工具可以一起来控制曝光量。光圈（值）大小其实就是那个小圆窗户开多大，快门（速度）就是窗户打开多久。</p>\n<p>所以 得出如下公式:</p>\n<blockquote>\n<p>曝光量 = 光圈大小(非光圈F值) * 快门速度(单位 s)</p>\n</blockquote>\n<p>假若一个镜头光圈全开为F4，光圈F4快门速度1秒为正确曝光值，那F5.6和2秒以及F8和4秒也同样能得到准确曝光的图片。</p>\n<p>一张正确曝光的图片可以有N种不同的光圈和快门速度组合。</p>\n<h4 id="\"光圈，快门速度，ISO-总结\""><a href="\"#光圈，快门速度，ISO-总结\"" class="\"headerlink\"" title="\"光圈，快门速度，ISO" 总结\"=""></a>光圈，快门速度，ISO 总结</h4><p>光圈和速度联合决定进光量，ISO决定CCD/CMOS的感光速度。如果进光量不够，我们可以开大光圈或者降低快门速度，还是不够的话就提高ISO。大光圈的缺点是解像度不如中等光圈，快门速度降低则图片可能会糊，提高ISO后图片质量也会下降 。</p>\n<hr>\n<h3 id="\"测光与测光模式\""><a href="\"#测光与测光模式\"" class="\"headerlink\"" title="\"测光与测光模式\""></a>测光与测光模式</h3><h4 id="\"名词解释-1\""><a href="\"#名词解释-1\"" class="\"headerlink\"" title="\"名词解释:\""></a>名词解释:</h4><p>测量光线的强度，自动给出能正确曝光的光圈和快门速度</p>\n<h4 id="\"实现原理-2\""><a href="\"#实现原理-2\"" class="\"headerlink\"" title="\"实现原理\""></a>实现原理</h4><p>每个数码相机里都有一个光敏电阻（不同强度的光线照射时电阻值发生变化），相机内的电脑根据电阻值的变化确定光线强度，进而确定曝光值（光圈，快门）。</p>\n<p>测光模式主要有点测光，中央重点测光，区域（平均）测光三种。点测光只测取景框内一个小点的光线强度（此小点大约为取景框面积的10%到1%，看不同机型）。区域（平均）测光则把取景框分为5到63块（看机型不同），分别对每块测光然后再加权平均得到光照强度。中央重点测光是简化的区域（平均）测光，只把取景框分为中央圆圈和四周两块，分别测光，然后加权平均（中央圆圈的权重为70%左右）。</p>\n<h4 id="\"实践检验-3\""><a href="\"#实践检验-3\"" class="\"headerlink\"" title="\"实践检验:\""></a>实践检验:</h4><p>大多数情况下用区域测光即可。在光线明暗反差很大时应该采用点测光。用区域（平均）测光或中央重点也可以，你可根据自己的艺术创意进行曝光补偿。</p>\n<hr>\n<h3 id="\"曝光补偿\""><a href="\"#曝光补偿\"" class="\"headerlink\"" title="\"曝光补偿\""></a>曝光补偿</h3><h4 id="\"名词解释-2\""><a href="\"#名词解释-2\"" class="\"headerlink\"" title="\"名词解释\""></a>名词解释</h4><p>我们之所以能看见东西，不外乎两种情况：一是物体本身可以发光，比如太阳或灯泡；大多数情况是物体能反射外来光线。反射的光线越多，物体就越亮，反之则越暗。假设两个极端，纯黑色物体不会反射光线，反射率为零，而纯白的物体反射率是100%。在这两个极端之间取中间值就是不黑也不白的灰色，称为柯达灰，也称为18%中间灰。</p>\n<p>以一张客厅照片为例，客厅墙壁又白又亮，而电视机的大屏幕又黑又暗，窗帘和家具等亮度居中。要以谁的亮度来确定曝光？相机自动测光就是取平均数，最后给出一个让图片达到中间灰的曝光值。</p>\n<p>所以会导致本来应该雪白刺眼的场景拍出来却是一片灰色；再比如对着一堆煤球拍，本来是纯黑，拍出来却是灰煤。</p>\n<h4 id="\"实践检验-4\""><a href="\"#实践检验-4\"" class="\"headerlink\"" title="\"实践检验\""></a>实践检验</h4><p>在明暗反差很大时自动曝光往往不准，需要手动暴光补偿。</p>\n<p>曝光补偿的原则：白加黑减。如果构图中有大片白色物体或者有灯等特别明亮的物体，就要相应增加曝光量（增大光圈or/and减低快门速度）；如果取景框中有大片黑色的物体，则要减少曝光量。</p>\n<p>对于raw格式图片，进行曝光补偿调整是几乎不太会影响质量的，所以夜景推荐使用raw格式</p>\n<hr>\n<h3 id="\"焦距\""><a href="\"#焦距\"" class="\"headerlink\"" title="\"焦距\""></a>焦距</h3><h4 id="\"名词解释-3\""><a href="\"#名词解释-3\"" class="\"headerlink\"" title="\"名词解释:\""></a>名词解释:</h4><p>光线经过透镜就会聚成一点（焦点） ，镜头的焦距就是从镜片（或镜片组）的中心到焦点的距离，单位是毫米</p>\n<h4 id="\"镜头知识\""><a href="\"#镜头知识\"" class="\"headerlink\"" title="\"镜头知识:\""></a>镜头知识:</h4><ul>\n<li><p>标准镜头: 焦距50mm的镜头，简称标头.拍出来的照片类似肉眼平视的感觉（视角为45°左右）。</p>\n</li>\n<li><p>广角镜头:（焦距小于35mm）能够让照相机“看得更宽阔”，因为它视角大.</p>\n</li>\n<li><p>长焦镜头:（焦距大于70mm）能让照相机“看得更远”，但视角窄。</p>\n</li>\n<li><p>定焦镜头: 焦距固定</p>\n</li>\n</ul>\n<h4 id="\"光学变焦与数码变焦\""><a href="\"#光学变焦与数码变焦\"" class="\"headerlink\"" title="\"光学变焦与数码变焦\""></a>光学变焦与数码变焦</h4><blockquote>\n<p>变焦倍数＝最大焦距值/最小焦距值</p>\n</blockquote>\n<p>光学变焦: 依靠镜片的位移来实现焦距的改变。光学变焦倍数越大，里面的镜片就越多，镜头体积相应较大，画质相对较低，光圈相对较小。</p>\n<p>数码变焦: 只是软件层面的电子放大。</p>\n<hr>\n<h3 id="\"色温与白平衡\""><a href="\"#色温与白平衡\"" class="\"headerlink\"" title="\"色温与白平衡\""></a>色温与白平衡</h3><h4 id="\"名词解释-4\""><a href="\"#名词解释-4\"" class="\"headerlink\"" title="\"名词解释:\""></a>名词解释:</h4><p>色温: 以开尔文温度表示光线的色彩，单位是K。当物体被加热到一定的温度时就会发出光线，此光线不仅含有亮度的成份，更含有颜色的成份。温度越高，蓝色的成份越多，图像就会偏蓝；相反，温度越低，红色的成份就越多，图像就会偏红。</p>\n<pre><code>光线的色温\n光源                                色温（Ｋ）\n蜡烛                                  2000\n钨丝灯                                 2500-3200\n荧光灯                               4500-6500\n日光（平均）                           5400\n有云天气下的日光                         6500-7000\n</code></pre><p>物体在不同色温的光源照射下会呈现不同的色调，在日光灯下整体偏白，在普通钨丝白炽灯下整体偏黄。白平衡就是照相机对白色的还原准确性。大多数情况下数码相机能准确判断光源的类型，拍出的照片颜色准确，但也有时候相机的电脑对色温做出了错误的判断。</p>\n<h4 id="\"实践检验-5\""><a href="\"#实践检验-5\"" class="\"headerlink\"" title="\"实践检验:\""></a>实践检验:</h4><p>选择raw可完美实现后期设置白平衡</p>\n<hr>\n<h2 id="\"实践场景\""><a href="\"#实践场景\"" class="\"headerlink\"" title="\"实践场景\""></a>实践场景</h2><h3 id="\"实践准则\""><a href="\"#实践准则\"" class="\"headerlink\"" title="\"实践准则:\""></a>实践准则:</h3><ol>\n<li>光圈越大，景深越小；</li>\n<li>焦距越长，景深越小；</li>\n<li>离被摄物体越近，景深越小。</li>\n</ol>\n<h3 id="\"夜景\""><a href="\"#夜景\"" class="\"headerlink\"" title="\"夜景\""></a>夜景</h3><ol>\n<li>在夜景拍摄中，绝大多数场景推荐使用A挡光圈优先，因为可以随意控制景深。拍风光车流什么的就小光圈，低iso</li>\n<li>测光: 如果拍摄场景中只有主体一部分是亮的，就对它进行点测光。要是场景中有好多都是亮的，就用平均测光和中央重点测光就好。</li>\n<li>曝光: 原则上，白加黑减。对于夜晚，调整曝光补偿略微减0.3到0.7档曝光。</li>\n<li>用raw格式，为了后期调白平衡。对于夜景，白平衡是灵魂。</li>\n</ol>\n<blockquote>\n<p>未完</p>\n</blockquote>\n<hr>\n<p>参考资料:</p>\n<p><a href="\"http://iphoto.blog.163.com/blog/static/174404124200832982358951/\"" target="\"_blank\"" rel="\"external\"">几个必要的摄影名词解释</a></p>\n<p>百度百科</p>\n<p>维基百科</p>\n"},{"title":"超星慕课视频系统破解","url":"https://joway.wang/posts/Hacked/2016-04-08-chaoxing-hacked.html","content":"<p>超星那个傻逼系统有多逆天就不说了，简直是浪费生命，一个在21世纪还在实施这种土鳖无用的教学制度的国家倘若还能强国，简直是对时代的侮辱。</p>\n<p>本教程只适用于超星慕课上的课程，其它课程网站需要修改代码 。</p>\n<a id="\"more\""></a>\n<p>如果未安装Chrome，请下载并安装好Chrome。</p>\n<p>相关附件下载 :  <a href="\"https://dn-joway.qbox.me/1460124976338_chaoxin-hacked-crx.zip\"" target="\"_blank\"" rel="\"external\"">https://dn-joway.qbox.me/1460124976338_chaoxin-hacked-crx.zip</a></p>\n<p>原理使用了javascript劫持技术，若你明白如何在浏览器中手动运行代码可跳到第二种方法，直接Chrome的开发工具里插入js脚本代码。这段代码参考了网上另外一个人的实现，如果还想进一步Hack，可以修改代码，我没有时间去折腾这个了，就直接拿来用了。</p>\n<p>在浏览器中输入 : <a href="\"chrome://extensions/\"" target="\"_blank\"" rel="\"external\"">chrome://extensions/</a> , 打开扩展程序页，将附件中的Tampermonkey_3.12_0.crx拖入页面，即可安装好插件。</p>\n<p>安装好后， 在插件页选择选项按钮，进入如下配置页:</p>\n<p><img src="\"https://dn-joway.qbox.me/1460123362978_%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-04-08%2021.41.28.png\"" alt="\"\""></p>\n<p>在Zip栏点击选择文件，导入 chaoxing-hacked.zip 压缩包</p>\n<p><img src="\"https://dn-joway.qbox.me/1460123447255_%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-04-08%2021.41.40.png\"" alt="\"\""></p>\n<p>安装好后，在已安装脚本里:选中装好的脚本，</p>\n<p><img src="\"https://dn-joway.qbox.me/1460123510167_%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-04-08%2021.42.02.png\"" alt="\"\""></p>\n<p>选择启动</p>\n<p><img src="\"https://dn-joway.qbox.me/1460123537987_%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-04-08%2021.42.09.png\"" alt="\"\""></p>\n<p>然后就可以打开超星的视频页，当加载完成后，即可自动破解快进限制，之后就可以直接拖动到最后完成观看任务了~</p>\n<hr>\n<p>如果不想安装插件，可以打开开发工具，手动输入 （ 会比较麻烦，且由于加载策略的不同，会有bug，推荐上面那种方法:</p>\n<figure class="\"highlight" js\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br><span class="\"line\"">38</span><br><span class="\"line\"">39</span><br><span class="\"line\"">40</span><br><span class="\"line\"">41</span><br><span class="\"line\"">42</span><br><span class="\"line\"">43</span><br><span class="\"line\"">44</span><br><span class="\"line\"">45</span><br><span class="\"line\"">46</span><br><span class="\"line\"">47</span><br><span class="\"line\"">48</span><br><span class="\"line\"">49</span><br><span class="\"line\"">50</span><br><span class="\"line\"">51</span><br><span class="\"line\"">52</span><br><span class="\"line\"">53</span><br><span class="\"line\"">54</span><br><span class="\"line\"">55</span><br><span class="\"line\"">56</span><br><span class="\"line\"">57</span><br><span class="\"line\"">58</span><br><span class="\"line\"">59</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">var</span> HtmlUtil = {</span><br><span class="\"line\"">    htmlEncodeByRegExp: <span class="\"function\""><span class="\"keyword\"">function</span> (<span class="\"params\"">str</span>) </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">var</span> s = <span class="\"string\"">\"\"</span>;</span><br><span class="\"line\"">        <span class="\"keyword\"">if</span> (str.length == <span class="\"number\"">0</span>) <span class="\"keyword\"">return</span> <span class="\"string\"">\"\"</span>;</span><br><span class="\"line\"">        s = str.replace(<span class="\"regexp\"">/&/g</span>,<span class="\"string\"">\"&amp;\"</span>);</span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/,<span class="\"string\"">\"&lt;\"</span>);</span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/>/g</span>,<span class="\"string\"">\"&gt;\"</span>);</span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/\\'/g</span>,<span class="\"string\"">\"&#39;\"</span>);</span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/\\\"/g</span>,<span class="\"string\"">\"&quot;\"</span>);</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> s;</span><br><span class="\"line\"">    },</span><br><span class="\"line\"">    htmlDecodeByRegExp: <span class="\"function\""><span class="\"keyword\"">function</span> (<span class="\"params\"">str</span>) </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">var</span> s = <span class="\"string\"">\"\"</span>;</span><br><span class="\"line\"">        <span class="\"keyword\"">if</span> (str.length == <span class="\"number\"">0</span>) <span class="\"keyword\"">return</span> <span class="\"string\"">\"\"</span>;</span><br><span class="\"line\"">        s = str.replace(<span class="\"regexp\"">/&amp;/g</span>,<span class="\"string\"">\"&\"</span>);</span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/&lt;/g</span>,<span class="\"string\"">\"<\"< span="\"\"">);</\"<></span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/&gt;/g</span>,<span class="\"string\"">\">\"</span>);</span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/&#39;/g</span>,<span class="\"string\"">\"\\'\"</span>);</span><br><span class="\"line\"">        s = s.replace(<span class="\"regexp\"">/&quot;/g</span>,<span class="\"string\"">\"\\\"\"</span>);</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> s;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">};</span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"function\""><span class="\"keyword\"">function</span> <span class="\"title\"">getByClass</span>(<span class="\"params\"">sClass</span>)</span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">var</span> aResult = [];</span><br><span class="\"line\"">    <span class="\"keyword\"">var</span> aEle = <span class="\"built_in\"">document</span>.getElementsByTagName(<span class="\"string\"">'*'</span>);</span><br><span class="\"line\"">    <span class="\"keyword\"">for</span> (<span class="\"keyword\"">var</span> i = <span class="\"number\"">0</span>; i < aEle.length; i++) {</span><br><span class="\"line\"">        <span class="\"keyword\"">var</span> arr = aEle[i].className.split(<span class="\"regexp\"">/\\s+/</span>);</span><br><span class="\"line\"">        <span class="\"keyword\"">for</span>(<span class="\"keyword\"">var</span> j = <span class="\"number\"">0</span>; j < arr.length; j++){</span><br><span class="\"line\"">            <span class="\"keyword\"">if</span>(arr[j] == sClass){</span><br><span class="\"line\"">                aResult.push(aEle[i]);</span><br><span class="\"line\"">            }</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">    <span class="\"keyword\"">return</span> aResult;</span><br><span class="\"line\"">}</span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"keyword\"">if</span> (<span class="\"keyword\"">typeof</span> mArg == <span class="\"string\"">\"object\"</span>) {</span><br><span class="\"line\"">    <span class="\"keyword\"">if</span> (mArg.attachments[<span class="\"number\"">0</span>].isPassed == <span class="\"literal\"">true</span>) {</span><br><span class="\"line\"">        alert(<span class="\"string\"">'Warning: This job has been finished once.'</span>);</span><br><span class="\"line\"">    } <span class="\"keyword\"">else</span> {</span><br><span class="\"line\"">        mArg.attachments[<span class="\"number\"">0</span>].isPassed = <span class="\"literal\"">true</span>;</span><br><span class="\"line\"">        mArg.attachments[<span class="\"number\"">0</span>].headOffset = <span class="\"number\"">1478000</span>;</span><br><span class="\"line\"">        mArg.attachments[<span class="\"number\"">0</span>].playTime = <span class="\"number\"">1478000</span>;</span><br><span class="\"line\"">        mArg.attachments[<span class="\"number\"">0</span>].job = <span class="\"literal\"">false</span>;</span><br><span class="\"line\"">        <span class="\"keyword\"">var</span> aBox = getByClass(<span class="\"string\"">\"ans-attach-online\"</span>);</span><br><span class="\"line\"">        <span class="\"keyword\"">if</span> (aBox[<span class="\"number\"">0</span>]) {</span><br><span class="\"line\"">            <span class="\"keyword\"">var</span> htmlData = aBox[<span class="\"number\"">0</span>].getAttribute(<span class="\"string\"">\"data\"</span>);</span><br><span class="\"line\"">            <span class="\"keyword\"">var</span> bBox = getByClass(<span class="\"string\"">\"ans-cc\"</span>);</span><br><span class="\"line\"">            <span class="\"keyword\"">if</span> (bBox[<span class="\"number\"">0</span>]) {</span><br><span class="\"line\"">                bBox[<span class="\"number\"">0</span>].innerHTML = <span class="\"string\"">'<p><iframe frameborder="\"0\"" scrolling="\"no\"" class="\"ans-module" ans-attach-online="" ans-insertvideo-module\"="" module="\"insertvideo\"" data="\"'</span"></iframe></p></span><br><span class="\"" line\"="\"\"">                    + HtmlUtil.htmlEncodeByRegExp(htmlData)<p></p></span><br><span class="\"line\"">                    + <span class="\"string\"">'\" type=\"online\"><br><p></p>'</span>;</span><br><span class="\"line\"">                uParse(<span class="\"string\"">\".ans-cc\"</span>, <span class="\"literal\"">null</span>, mArg);</span><br><span class="\"line\"">                alert(<span class="\"string\"">'Hacked'</span>);</span><br><span class="\"line\"">            }</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">}</span><br></span></span></span></pre></td></tr></table></figure>\n"},{"title":"清明前后言","url":"https://joway.wang/posts/随感/2016-04-02-2016-04-01.html","content":"<p>假日。</p>\n<p>发现生活变得索然无味。知道这是自己的原因，可桎梏就是如此，难以逃脱。</p>\n<p>开始想，一日为何要有三餐的必要，一生为何要漫长变老。一切也就是闲时的多想，忙碌与逼迫能够打消这一切的苦恼。</p>\n<a id="\"more\""></a>\n<p>生活在进步，每天都比昨天前进一点一滴，却依旧不知道要去向哪里。总以为，前进就是最大的正确，而生活似乎不在乎正确。</p>\n<p>大可以参加参加社会活动，刷刷微博讨论下民间恶俗，闲了去朋友圈投个票，热爱国家热爱中医，不是一切事物都需要做出价值判断，不是一切结果都以是非论断。</p>\n<p>前几天在手机里听到一段之前误按录下的语音，那时候正半睡半醒，那个刹那的确有种往日时光蹦到你眼前的错觉。每次回忆起旧日时光，脑中总会浮现出史铁生坐着轮椅在天坛里转悠的模样。我也不知道为什么会产生这样的联想，或者是我们都认为过去的时光过去之后，我们都像成了个残废。</p>\n<p>好在我们都能够选择，做出对个人利益最大化的选择。然而即便所有的选择明朗地摆在我的面前，我却依然无法下定拿起的决心。我开始相信，资本主义那套论调只是在统计上成立，而分立到每一个具体的人身上，都是一个个鲜活的灵魂实例。人的尊严也只有作为个体的时候，才如此的明显。</p>\n<p>我笑言自己是一个披着理性外衣的感性动物，我所谓的理性只是不想对这个世界无保留的浪费感性。我不聪明，但也不甘愚蠢。</p>\n<p>对世界进行价值判断和道德判断是解决个人危机最迅捷的途经，我从朦胧中二的岁月走到如今不朦胧却依旧中二的岁月里，靠着所谓的判断一次次解救自己也陷害了自己。即便一切都很明朗，即便我知道我需要怎么做才能利益最大化，只是我并未做好这些准备。</p>\n<p>时常怀疑这个世界是否会变好，很遗憾我看到的大部分人并没有在为这个世界变好而努力，甚至相当一部分做着变坏的努力。但转念一想,  所谓的好坏又是无从说起。或许对大部分人而言，灯红酒绿花前月下才算是真正的好。</p>\n<p>说到底，也只是短暂性状态不佳综合症。小时候养成的写日记的习惯，不说出来，心里难过。长大后，这习惯就变成了装逼。</p>\n<p>现在装逼完毕，满血复活，继续搬砖  :)   </p>\n"},{"title":"JPBC(Java Pairing Based Cryptography) 库 实例详解","url":"https://joway.wang/posts/Java/2016-04-02-jpbc-show-me-the-code.html","content":"<h3 id="\"前言\""><a href="\"#前言\"" class="\"headerlink\"" title="\"前言:\""></a>前言:</h3><p>前面一篇文章讲了JPBC库的基本使用，但是单单一个介绍可能还是很难知道如何去实践，我这里把我最近实现的一个论文里的算法给拿过来，作为实例进行解释如何使用JPBC。<br><a id="\"more\""></a><br>论文地址: <a href="\"https://joway.wang/assets/files/可证安全的高效可托管公钥加密方案_刘文浩.pdf\"">可证安全的高效可托管公钥加密方案_刘文浩</a></p>\n<p>代码下载: <a href="\"https://github.com/joway/JPBC_Optimize_IBE\"" target="\"_blank\"" rel="\"external\"">JPBC_Optimize_IBE</a></p>\n<p>该方案是对 BF-IBE 方案 的一种改进，实现可托管加解密。生成一个公钥，一个托管私钥，一个主私钥，主私钥包含数字签名功能。</p>\n<h3 id="\"建立Model\""><a href="\"#建立Model\"" class="\"headerlink\"" title="\"建立Model\""></a>建立Model</h3><h4 id="\"CommonText\""><a href="\"#CommonText\"" class="\"headerlink\"" title="\"CommonText\""></a>CommonText</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">interface</span> <span class="\"title\"">CommonText</span> <span class="\"keyword\"">extends</span> <span class="\"title\"">Externalizable</span> </span>{</span><br><span class="\"line\"">    <span class="\"comment\"">/*</span><br><span class="\"line\"">    由于jpbc库的Element类型不支持序列化, 所以使用这个java原生的自定义序列化接口,</span><br><span class="\"line\"">    来达到序列化的目的.</span><br><span class="\"line\"">     */</span></span><br><span class="\"line\"">    <span class="\"function\"">String <span class="\"title\"">toString</span><span class="\"params\"">()</span></span>;</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<p>实现Externalizable接口，为了能够序列为比特流存入文件中。</p>\n<h4 id="\"CipherText\""><a href="\"#CipherText\"" class="\"headerlink\"" title="\"CipherText\""></a>CipherText</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">class</span> <span class="\"title\"">CipherText</span> <span class="\"keyword\"">implements</span> <span class="\"title\"">CommonText</span> </span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Element U;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> ArrayList<<span class="\"keyword\"">byte</span>[]> V;</span><br><span class="\"line\"">    </span><br><span class="\"line\"">    ...</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<p>U 为密文标识，V 为 经国处理后的密文二进制流</p>\n<h4 id="\"PlainText\""><a href="\"#PlainText\"" class="\"headerlink\"" title="\"PlainText\""></a>PlainText</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">class</span> <span class="\"title\"">PlainText</span> <span class="\"keyword\"">implements</span> <span class="\"title\"">CommonText</span> </span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> ArrayList<<span class="\"keyword\"">byte</span>[]> message;</span><br><span class="\"line\"">    ...</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h4 id="\"UserKey\""><a href="\"#UserKey\"" class="\"headerlink\"" title="\"UserKey\""></a>UserKey</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">class</span> <span class="\"title\"">UserKey</span> </span>{</span><br><span class="\"line\"">    <span class="\"comment\"">// 以下为用户私有信息</span></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Element Kp; <span class="\"comment\"">// 主解密私钥</span></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Element Ke; <span class="\"comment\"">// 托管私钥,交给服务器</span></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Element Ppub; <span class="\"comment\"">// 公钥</span></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"title\"">UserKey</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h4 id="\"SystemParameter\""><a href="\"#SystemParameter\"" class="\"headerlink\"" title="\"SystemParameter\""></a>SystemParameter</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br><span class="\"line\"">38</span><br><span class="\"line\"">39</span><br><span class="\"line\"">40</span><br><span class="\"line\"">41</span><br><span class="\"line\"">42</span><br><span class="\"line\"">43</span><br><span class="\"line\"">44</span><br><span class="\"line\"">45</span><br><span class="\"line\"">46</span><br><span class="\"line\"">47</span><br><span class="\"line\"">48</span><br><span class="\"line\"">49</span><br><span class="\"line\"">50</span><br><span class="\"line\"">51</span><br><span class="\"line\"">52</span><br><span class="\"line\"">53</span><br><span class="\"line\"">54</span><br><span class="\"line\"">55</span><br><span class="\"line\"">56</span><br><span class="\"line\"">57</span><br><span class="\"line\"">58</span><br><span class="\"line\"">59</span><br><span class="\"line\"">60</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">class</span> <span class="\"title\"">SystemParameter</span> </span>{</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">// 系统公共参数:</span></span><br><span class="\"line\"">    <span class="\"comment\"">// 1. 素数阶q</span></span><br><span class="\"line\"">    <span class="\"comment\"">// 2. G1,G2, 其中G2 == G1</span></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Field G1;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">// 3. 双线性映射关系 e ( 这里设成pairing</span></span><br><span class="\"line\"">    <span class="\"comment\"">/*</span><br><span class="\"line\"">    pairing.pairing(x, y) 代表数学上 e（x,y）</span><br><span class="\"line\"">    双线性映射</span><br><span class="\"line\"">    */</span></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> <span class="\"keyword\"">static</span> Pairing pairing;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">// 4. n : 二进制位数</span></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">// 5. P : 群G1的生成元</span></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Element P;<span class="\"comment\"">// G1的生成元</span></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">// 6. g2 : e(P,P) 值</span></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Element g2;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">// 7. H : 杂凑函数(这里选择哈希函数 sh256)</span></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> <span class="\"keyword\"">int</span> SIZE = <span class="\"number\"">32</span>; <span class="\"comment\"">// 256 bit</span></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"title\"">SystemParameter</span><span class="\"params\"">(Field g1, Pairing pairing, Element p, Element g2, Field zr)</span> </span>{</span><br><span class="\"line\"">        G1 = g1;</span><br><span class="\"line\"">        SystemParameter.pairing = pairing;</span><br><span class="\"line\"">        P = p;</span><br><span class="\"line\"">        <span class="\"keyword\"">this</span>.g2 = g2;</span><br><span class="\"line\"">        Zr = zr;</span><br><span class="\"line\""></span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> Field <span class="\"title\"">getZr</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> Zr;</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"keyword\"">void</span> <span class="\"title\"">setZr</span><span class="\"params\"">(Field zr)</span> </span>{</span><br><span class="\"line\"">        Zr = zr;</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> Field Zr; <span class="\"comment\"">// // {1,...,r} 整数集</span></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"title\"">SystemParameter</span><span class="\"params\"">(Field g1, Pairing pairing, Element p, Element g2)</span> </span>{</span><br><span class="\"line\"">        G1 = g1;</span><br><span class="\"line\"">        <span class="\"keyword\"">this</span>.pairing = pairing;</span><br><span class="\"line\"">        P = p;</span><br><span class="\"line\"">        <span class="\"keyword\"">this</span>.g2 = g2;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">    </span><br><span class="\"line\"">    ....</span><br><span class="\"line\""></span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h3 id="\"基础加解密实现\""><a href="\"#基础加解密实现\"" class="\"headerlink\"" title="\"基础加解密实现:\""></a>基础加解密实现:</h3><p>详情见注释</p>\n<h3 id="\"Ident-接口\""><a href="\"#Ident-接口\"" class="\"headerlink\"" title="\"Ident" 接口\"=""></a>Ident 接口</h3><p>之所以弄个接口，是为了后面测试性能的时候，可以用到代理，这样方便点。</p>\n<figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">interface</span> <span class="\"title\"">Ident</span> </span>{</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">void</span> <span class="\"title\"">setUp</span><span class="\"params\"">()</span></span>;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\"">UserKey <span class="\"title\"">privateKeyGen</span><span class="\"params\"">()</span></span>;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\"">CipherText <span class="\"title\"">encrypt</span><span class="\"params\"">(PlainText plainText, UserKey userKey)</span></span>;</span><br><span class="\"line\"">    <span class="\"function\"">CipherText <span class="\"title\"">encrypt</span><span class="\"params\"">(String filename, UserKey userKey)</span> <span class="\"keyword\"">throws</span> IOException</span>;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\"">PlainText <span class="\"title\"">userDecrypt</span><span class="\"params\"">(CipherText cipherText, UserKey userKey)</span></span>;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\"">PlainText <span class="\"title\"">escrowDecrypt</span><span class="\"params\"">(CipherText cipherText, UserKey userKey)</span></span>;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\"">PlainText <span class="\"title\"">userDecrypt</span><span class="\"params\"">(String filename, UserKey userKey)</span> <span class="\"keyword\"">throws</span> IOException, ClassNotFoundException</span>;</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\"">PlainText <span class="\"title\"">escrowDecrypt</span><span class="\"params\"">(String filename, UserKey userKey)</span> <span class="\"keyword\"">throws</span> IOException, ClassNotFoundException</span>;</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h3 id="\"BaseIdentSystem\""><a href="\"#BaseIdentSystem\"" class="\"headerlink\"" title="\"BaseIdentSystem\""></a>BaseIdentSystem</h3><p>该类实现了:</p>\n<ul>\n<li>系统初始化</li>\n<li>密钥生成</li>\n<li>加密文件或比特流</li>\n<li>用户主私钥解密文件或比特流</li>\n<li>托管解密主私钥或比特流</li>\n</ul>\n<figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br><span class="\"line\"">38</span><br><span class="\"line\"">39</span><br><span class="\"line\"">40</span><br><span class="\"line\"">41</span><br><span class="\"line\"">42</span><br><span class="\"line\"">43</span><br><span class="\"line\"">44</span><br><span class="\"line\"">45</span><br><span class="\"line\"">46</span><br><span class="\"line\"">47</span><br><span class="\"line\"">48</span><br><span class="\"line\"">49</span><br><span class="\"line\"">50</span><br><span class="\"line\"">51</span><br><span class="\"line\"">52</span><br><span class="\"line\"">53</span><br><span class="\"line\"">54</span><br><span class="\"line\"">55</span><br><span class="\"line\"">56</span><br><span class="\"line\"">57</span><br><span class="\"line\"">58</span><br><span class="\"line\"">59</span><br><span class="\"line\"">60</span><br><span class="\"line\"">61</span><br><span class="\"line\"">62</span><br><span class="\"line\"">63</span><br><span class="\"line\"">64</span><br><span class="\"line\"">65</span><br><span class="\"line\"">66</span><br><span class="\"line\"">67</span><br><span class="\"line\"">68</span><br><span class="\"line\"">69</span><br><span class="\"line\"">70</span><br><span class="\"line\"">71</span><br><span class="\"line\"">72</span><br><span class="\"line\"">73</span><br><span class="\"line\"">74</span><br><span class="\"line\"">75</span><br><span class="\"line\"">76</span><br><span class="\"line\"">77</span><br><span class="\"line\"">78</span><br><span class="\"line\"">79</span><br><span class="\"line\"">80</span><br><span class="\"line\"">81</span><br><span class="\"line\"">82</span><br><span class="\"line\"">83</span><br><span class="\"line\"">84</span><br><span class="\"line\"">85</span><br><span class="\"line\"">86</span><br><span class="\"line\"">87</span><br><span class="\"line\"">88</span><br><span class="\"line\"">89</span><br><span class="\"line\"">90</span><br><span class="\"line\"">91</span><br><span class="\"line\"">92</span><br><span class="\"line\"">93</span><br><span class="\"line\"">94</span><br><span class="\"line\"">95</span><br><span class="\"line\"">96</span><br><span class="\"line\"">97</span><br><span class="\"line\"">98</span><br><span class="\"line\"">99</span><br><span class="\"line\"">100</span><br><span class="\"line\"">101</span><br><span class="\"line\"">102</span><br><span class="\"line\"">103</span><br><span class="\"line\"">104</span><br><span class="\"line\"">105</span><br><span class="\"line\"">106</span><br><span class="\"line\"">107</span><br><span class="\"line\"">108</span><br><span class="\"line\"">109</span><br><span class="\"line\"">110</span><br><span class="\"line\"">111</span><br><span class="\"line\"">112</span><br><span class="\"line\"">113</span><br><span class="\"line\"">114</span><br><span class="\"line\"">115</span><br><span class="\"line\"">116</span><br><span class="\"line\"">117</span><br><span class="\"line\"">118</span><br><span class="\"line\"">119</span><br><span class="\"line\"">120</span><br><span class="\"line\"">121</span><br><span class="\"line\"">122</span><br><span class="\"line\"">123</span><br><span class="\"line\"">124</span><br><span class="\"line\"">125</span><br><span class="\"line\"">126</span><br><span class="\"line\"">127</span><br><span class="\"line\"">128</span><br><span class="\"line\"">129</span><br><span class="\"line\"">130</span><br><span class="\"line\"">131</span><br><span class="\"line\"">132</span><br><span class="\"line\"">133</span><br><span class="\"line\"">134</span><br><span class="\"line\"">135</span><br><span class="\"line\"">136</span><br><span class="\"line\"">137</span><br><span class="\"line\"">138</span><br><span class="\"line\"">139</span><br><span class="\"line\"">140</span><br><span class="\"line\"">141</span><br><span class="\"line\"">142</span><br><span class="\"line\"">143</span><br><span class="\"line\"">144</span><br><span class="\"line\"">145</span><br><span class="\"line\"">146</span><br><span class="\"line\"">147</span><br><span class="\"line\"">148</span><br><span class="\"line\"">149</span><br><span class="\"line\"">150</span><br><span class="\"line\"">151</span><br><span class="\"line\"">152</span><br><span class="\"line\"">153</span><br><span class="\"line\"">154</span><br><span class="\"line\"">155</span><br><span class="\"line\"">156</span><br><span class="\"line\"">157</span><br><span class="\"line\"">158</span><br><span class="\"line\"">159</span><br><span class="\"line\"">160</span><br><span class="\"line\"">161</span><br><span class="\"line\"">162</span><br><span class="\"line\"">163</span><br><span class="\"line\"">164</span><br><span class="\"line\"">165</span><br><span class="\"line\"">166</span><br><span class="\"line\"">167</span><br><span class="\"line\"">168</span><br><span class="\"line\"">169</span><br><span class="\"line\"">170</span><br><span class="\"line\"">171</span><br><span class="\"line\"">172</span><br><span class="\"line\"">173</span><br><span class="\"line\"">174</span><br><span class="\"line\"">175</span><br><span class="\"line\"">176</span><br><span class="\"line\"">177</span><br><span class="\"line\"">178</span><br><span class="\"line\"">179</span><br><span class="\"line\"">180</span><br><span class="\"line\"">181</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">class</span> <span class="\"title\"">BaseIdentSystem</span> <span class="\"keyword\"">implements</span> <span class="\"title\"">Ident</span> </span>{</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"keyword\"">private</span> SystemParameter systemParameter;</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"title\"">BaseIdentSystem</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\"">        setUp();</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">/**</span><br><span class="\"line\"">     * 判断配对是否为对称配对，不对称则输出错误信息</span><br><span class="\"line\"">     *</span><br><span class="\"line\"">     * <span class="\"doctag\"">@param</span> pairing</span><br><span class="\"line\"">     */</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">private</span> <span class="\"keyword\"">void</span> <span class="\"title\"">checkSymmetric</span><span class="\"params\"">(Pairing pairing)</span> </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">if</span> (!pairing.isSymmetric()) {</span><br><span class="\"line\"">            <span class="\"keyword\"">throw</span> <span class="\"keyword\"">new</span> RuntimeException(<span class="\"string\"">\"密钥不对称!\"</span>);</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">/*只需要启动一次</span><br><span class="\"line\"">    系统初始化(Setup): 给定一个安全参数k,执行下面的步骤。</span><br><span class="\"line\"">    1) 输出 2 个阶为素数 q 的循环群 G1 与 G2 、群G1的生成元P,以及双线性映射e:G1 X G1 ->G2</span><br><span class="\"line\"">    2)计算g2 = e(P,P)。</span><br><span class="\"line\"">    3)选择杂凑函数H:G2 -> {0,1}^n,其中n是整数。</span><br><span class="\"line\"">    此方案的明文空间是 M = {0,1}^n ,密文空间是 C = G^* X {0,1}^n。</span><br><span class="\"line\"">    系统公共参数 params 为 (q,G1,G2,e,n,P,g2,H)。</span><br><span class="\"line\"">     */</span></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"keyword\"">void</span> <span class="\"title\"">setUp</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"-------------------系统建立阶段----------------------\"</span>);</span><br><span class="\"line\"">        <span class="\"comment\"">//双线性群的初始化</span></span><br><span class="\"line\"">        Pairing pairing = PairingFactory.getPairing(<span class="\"string\"">\"jpbc.properties\"</span>);</span><br><span class="\"line\"">        PairingFactory.getInstance().setUsePBCWhenPossible(<span class="\"keyword\"">true</span>);</span><br><span class="\"line\"">        checkSymmetric(pairing);</span><br><span class="\"line\""></span><br><span class="\"line\"">        Field G1 = pairing.getG1(); <span class="\"comment\"">//G1 == G2 对称</span></span><br><span class="\"line\""></span><br><span class="\"line\"">        Element P = G1.newRandomElement().getImmutable();<span class="\"comment\"">// 生成G1的生成元P</span></span><br><span class="\"line\""></span><br><span class="\"line\"">        Element g2 = pairing.pairing(P, P).getImmutable();</span><br><span class="\"line\""></span><br><span class="\"line\"">        systemParameter = <span class="\"keyword\"">new</span> SystemParameter(</span><br><span class="\"line\"">                G1, pairing, P, g2, pairing.getZr()</span><br><span class="\"line\"">        );</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">/*用户的(双)私钥生成算法:每个用户生成自己的公钥及其对应的 2 个 解密私钥。</span><br><span class="\"line\"">    1. 随机选择一个随机数 x (- Zq ,并将其 设置为主解密私钥,即Kp = x。</span><br><span class="\"line\"">    2. 将托管解密私钥设为Ke = x^-1 P</span><br><span class="\"line\"">    3. 将公钥设为Ppub = xP (- G1 。</span><br><span class="\"line\"">     */</span></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> UserKey <span class="\"title\"">privateKeyGen</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"-------------------密钥生成阶段----------------------\"</span>);</span><br><span class="\"line\"">        Element x = getRandInZr(); <span class="\"comment\"">// 用户自己主私钥,用户自己设置</span></span><br><span class="\"line\""></span><br><span class="\"line\"">        Element Kp = x.getImmutable();</span><br><span class="\"line\"">        Element Ke = systemParameter.getP().mulZn(x.invert()).getImmutable();</span><br><span class="\"line\"">        Element Ppub = systemParameter.getP().mulZn(x).getImmutable();</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> <span class="\"keyword\"">new</span> UserKey(Kp, Ke, Ppub);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">/*</span><br><span class="\"line\"">    拿Ppub对V加密</span><br><span class="\"line\"">    密文 C = (U, V)</span><br><span class="\"line\"">    1. 首先选择 r (- Zq</span><br><span class="\"line\"">    2.</span><br><span class="\"line\"">     */</span></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> CipherText <span class="\"title\"">encrypt</span><span class="\"params\"">(PlainText plainText, UserKey userKey)</span> </span>{</span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"-------------------加密阶段----------------------\"</span>);</span><br><span class="\"line\"">        Element r = getRandInZr();</span><br><span class="\"line\"">        Element U = userKey.getPpub().mulZn(r).getImmutable();<span class="\"comment\"">//U</span></span><br><span class="\"line\""></span><br><span class="\"line\"">        Element g2_r = systemParameter.get_g2().powZn(r);</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] sha256_g2_r = Utils.sha256(g2_r.toBytes());</span><br><span class="\"line\""></span><br><span class="\"line\"">        ArrayList<<span class="\"keyword\"">byte</span>[]> cipherV = <span class="\"keyword\"">new</span> ArrayList<>();</span><br><span class="\"line\"">        <span class="\"keyword\"">int</span> size = plainText.getMessage().size();</span><br><span class="\"line\"">        ArrayList<<span class="\"keyword\"">byte</span>[]> bytesBox = plainText.getMessage();</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">int</span> i = <span class="\"number\"">0</span>; i < size; ++i) {</span><br><span class="\"line\"">            cipherV.add(Utils.xor(bytesBox.get(i), sha256_g2_r));</span><br><span class="\"line\"">        }</span><br><span class="\"line\""></span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"明文\"</span>, plainText);</span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"密文\"</span>, <span class="\"keyword\"">new</span> CipherText(U, cipherV));</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> <span class="\"keyword\"">new</span> CipherText(U, cipherV);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> CipherText <span class="\"title\"">encrypt</span><span class="\"params\"">(String filename, UserKey userKey)</span> <span class="\"keyword\"">throws</span> IOException </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> encrypt(<span class="\"keyword\"">new</span> PlainText(FileUtils.fileToByteArray(filename)), userKey);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">/*</span><br><span class="\"line\"">    拿Ke对V解密</span><br><span class="\"line\"">     */</span></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> PlainText <span class="\"title\"">userDecrypt</span><span class="\"params\"">(CipherText cipherText, UserKey userKey)</span> </span>{</span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"-------------------主私钥解密阶段----------------------\"</span>);</span><br><span class="\"line\""></span><br><span class="\"line\"">        Utils.logBegTime();</span><br><span class="\"line\"">        Element eUKp_1_P = pairing(</span><br><span class="\"line\"">                cipherText.getU().getImmutable(),</span><br><span class="\"line\"">                systemParameter.getP().mulZn(userKey.getKp().invert())).getImmutable();</span><br><span class="\"line\"">        Utils.logEndTime(<span class="\"string\"">\"配对结束\"</span>);</span><br><span class="\"line\""></span><br><span class="\"line\"">        ArrayList<<span class="\"keyword\"">byte</span>[]> plainBytes = <span class="\"keyword\"">new</span> ArrayList<>();</span><br><span class="\"line\"">        ArrayList<<span class="\"keyword\"">byte</span>[]> cipherV = cipherText.getV();</span><br><span class="\"line\""></span><br><span class="\"line\"">        Utils.logBegTime();</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] sha256_eUKp_1_P = Utils.sha256(eUKp_1_P.toBytes());</span><br><span class="\"line\"">        Utils.logEndTime(<span class="\"string\"">\"哈希结束\"</span>);</span><br><span class="\"line\""></span><br><span class="\"line\"">        Utils.logBegTime();</span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">byte</span>[] aCipherV : cipherV) {</span><br><span class="\"line\"">            plainBytes.add(Utils.xor(aCipherV,sha256_eUKp_1_P));</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">        Utils.logEndTime(<span class="\"string\"">\"解密异或循环结束\"</span>);</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"主私钥解密后明文\"</span>, <span class="\"keyword\"">new</span> PlainText(plainBytes));</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> <span class="\"keyword\"">new</span> PlainText(plainBytes);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> PlainText <span class="\"title\"">userDecrypt</span><span class="\"params\"">(String filename, UserKey userKey)</span></span><br><span class="\"line\"">            <span class="\"keyword\"">throws</span> ClassNotFoundException, IOException </span>{</span><br><span class="\"line\"">        Utils.logBegTime();</span><br><span class="\"line\"">        CipherText cipherText = (CipherText) FileUtils.readObject(filename);</span><br><span class="\"line\"">        Utils.logEndTime(<span class="\"string\"">\"读取密文文件中的信息至内存\"</span>);</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> userDecrypt(cipherText, userKey);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> PlainText <span class="\"title\"">escrowDecrypt</span><span class="\"params\"">(CipherText cipherText, UserKey userKey)</span> </span>{</span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"-------------------托管私钥解密阶段----------------------\"</span>);</span><br><span class="\"line\""></span><br><span class="\"line\"">        Element eUKe = pairing(</span><br><span class="\"line\"">                cipherText.getU().getImmutable(),</span><br><span class="\"line\"">                userKey.getKe().getImmutable()).getImmutable();</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] sha256_eUKe = Utils.sha256(eUKe.toBytes());</span><br><span class="\"line\""></span><br><span class="\"line\"">        ArrayList<<span class="\"keyword\"">byte</span>[]> plainBytes = <span class="\"keyword\"">new</span> ArrayList<>();</span><br><span class="\"line\"">        ArrayList<<span class="\"keyword\"">byte</span>[]> cipherV = cipherText.getV();</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">byte</span>[] aCipherV : cipherV) {</span><br><span class="\"line\"">            plainBytes.add(Utils.xor(aCipherV, sha256_eUKe));</span><br><span class="\"line\"">        }</span><br><span class="\"line\""></span><br><span class="\"line\"">        Utils.log(<span class="\"string\"">\"托管解密后明文\"</span>, <span class="\"keyword\"">new</span> PlainText(plainBytes));</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> <span class="\"keyword\"">new</span> PlainText(plainBytes);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"comment\"">// BLS sing:</span></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"meta\"">@Override</span></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> PlainText <span class="\"title\"">escrowDecrypt</span><span class="\"params\"">(String filename, UserKey userKey)</span> <span class="\"keyword\"">throws</span> IOException, ClassNotFoundException </span>{</span><br><span class="\"line\"">        CipherText cipherText = (CipherText) FileUtils.readObject(filename);</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> escrowDecrypt(cipherText, userKey);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">private</span> Element <span class="\"title\"">getRandInZr</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> systemParameter.getZr().newRandomElement().getImmutable();</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">private</span> Element <span class="\"title\"">pairing</span><span class="\"params\"">(Element var1, Element var2)</span> </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> SystemParameter.getPairing().pairing(var1, var2).getImmutable();</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h4 id="\"BLS-短签名\""><a href="\"#BLS-短签名\"" class="\"headerlink\"" title="\"BLS" 短签名:\"=""></a>BLS 短签名:</h4><p>用于对用户加密后的文件进行签名认证</p>\n<figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br><span class="\"line\"">38</span><br><span class="\"line\"">39</span><br><span class="\"line\"">40</span><br><span class="\"line\"">41</span><br><span class="\"line\"">42</span><br><span class="\"line\"">43</span><br><span class="\"line\"">44</span><br><span class="\"line\"">45</span><br><span class="\"line\"">46</span><br><span class="\"line\"">47</span><br><span class="\"line\"">48</span><br><span class="\"line\"">49</span><br><span class="\"line\"">50</span><br><span class="\"line\"">51</span><br><span class="\"line\"">52</span><br><span class="\"line\"">53</span><br><span class="\"line\"">54</span><br><span class="\"line\"">55</span><br><span class="\"line\"">56</span><br><span class="\"line\"">57</span><br><span class="\"line\"">58</span><br><span class="\"line\"">59</span><br><span class="\"line\"">60</span><br><span class="\"line\"">61</span><br><span class="\"line\"">62</span><br><span class="\"line\"">63</span><br><span class="\"line\"">64</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">class</span> <span class="\"title\"">BLS01</span> </span>{</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"title\"">BLS01</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\""></span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> BLS01Parameters <span class="\"title\"">setup</span><span class="\"params\"">()</span> </span>{</span><br><span class="\"line\"">        BLS01ParametersGenerator setup = <span class="\"keyword\"">new</span> BLS01ParametersGenerator();</span><br><span class="\"line\"">        setup.init(PairingFactory.getPairingParameters(<span class="\"string\"">\"jpbc.properties\"</span>));</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> setup.generateParameters();</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> AsymmetricCipherKeyPair <span class="\"title\"">keyGen</span><span class="\"params\"">(BLS01Parameters parameters)</span> </span>{</span><br><span class="\"line\"">        BLS01KeyPairGenerator keyGen = <span class="\"keyword\"">new</span> BLS01KeyPairGenerator();</span><br><span class="\"line\"">        keyGen.init(<span class="\"keyword\"">new</span> BLS01KeyGenerationParameters(<span class="\"keyword\"">null</span>, parameters));</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> keyGen.generateKeyPair();</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"keyword\"">public</span> <span class="\"keyword\"">byte</span>[] sign(String message, CipherParameters privateKey) {</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] bytes = message.getBytes();</span><br><span class="\"line\""></span><br><span class="\"line\"">        BLS01Signer signer = <span class="\"keyword\"">new</span> BLS01Signer(<span class="\"keyword\"">new</span> SHA256Digest());</span><br><span class="\"line\"">        signer.init(<span class="\"keyword\"">true</span>, privateKey);</span><br><span class="\"line\"">        signer.update(bytes, <span class="\"number\"">0</span>, bytes.length);</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] signature = <span class="\"keyword\"">null</span>;</span><br><span class="\"line\"">        <span class="\"keyword\"">try</span> {</span><br><span class="\"line\"">            signature = signer.generateSignature();</span><br><span class="\"line\"">        } <span class="\"keyword\"">catch</span> (CryptoException e) {</span><br><span class="\"line\"">            <span class="\"keyword\"">throw</span> <span class="\"keyword\"">new</span> RuntimeException(e);</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> signature;</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"keyword\"">boolean</span> <span class="\"title\"">verify</span><span class="\"params\"">(<span class="\"keyword\"">byte</span>[] signature, String message, CipherParameters publicKey)</span> </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] bytes = message.getBytes();</span><br><span class="\"line\""></span><br><span class="\"line\"">        BLS01Signer signer = <span class="\"keyword\"">new</span> BLS01Signer(<span class="\"keyword\"">new</span> SHA256Digest());</span><br><span class="\"line\"">        signer.init(<span class="\"keyword\"">false</span>, publicKey);</span><br><span class="\"line\"">        signer.update(bytes, <span class="\"number\"">0</span>, bytes.length);</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> signer.verifySignature(signature);</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> <span class="\"keyword\"">void</span> <span class="\"title\"">main</span><span class="\"params\"">(String[] args)</span> </span>{</span><br><span class="\"line\"">        BLS01 bls01 = <span class="\"keyword\"">new</span> BLS01();</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"comment\"">// Setup</span></span><br><span class="\"line\"">        AsymmetricCipherKeyPair keyPair = bls01.keyGen(bls01.setup());</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"comment\"">// Test same message</span></span><br><span class="\"line\"">        String message = <span class="\"string\"">\"Hello World!\"</span>;</span><br><span class="\"line\""></span><br><span class="\"line\"">        System.out.println(bls01.sign(message, keyPair.getPrivate()).length);</span><br><span class="\"line\""></span><br><span class="\"line\"">        assertTrue(bls01.verify(bls01.sign(message, keyPair.getPrivate()), message, keyPair.getPublic()));</span><br><span class="\"line\""></span><br><span class="\"line\"">        <span class="\"comment\"">// Test different messages</span></span><br><span class="\"line\"">        assertFalse(bls01.verify(bls01.sign(message, keyPair.getPrivate()), <span class="\"string\"">\"Hello Italy!\"</span>, keyPair.getPublic()));</span><br><span class="\"line\"">    }</span><br><span class="\"line\""></span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>"},{"title":"JPBC(Java Pairing Based Cryptography) 库 使用","url":"https://joway.wang/posts/Java/2016-04-02-jpbc-base.html","content":"<h3 id="\"前言\""><a href="\"#前言\"" class="\"headerlink\"" title="\"前言\""></a>前言</h3><p>这段时间由于竞赛需要学习了JPBC库的使用， 不得不说，虽然此库极其强大，然而由于毕竟这块没有像那些大规模商用的东西那样流行，所以网上无论是英文还是中文的资料都极为稀少，官方文档也语焉不详。折腾了快半个月才把它大致搞懂，所以想把过程写下来，方便他人学习使用，如有错误，望指出。</p>\n<p>若想直接看源代码，可跳到 : <a href="\"http://localhost:4000/posts/Java/2016-04-02-jpbc-show-me-the-code.html\"" target="\"_blank\"" rel="\"external\"">JPBC(Java Pairing Based Cryptography) 库 实例详解</a></p>\n<a id="\"more\""></a>\n<h3 id="\"背景知识\""><a href="\"#背景知识\"" class="\"headerlink\"" title="\"背景知识:\""></a>背景知识:</h3><h4 id="\"双线性群初始化\""><a href="\"#双线性群初始化\"" class="\"headerlink\"" title="\"双线性群初始化:\""></a>双线性群初始化:</h4><ul>\n<li>质数阶双线性群（Prime-Order Bilinear Groups）；</li>\n<li>合数阶双线性群（Composite-Order Bilinear Groups）；</li>\n</ul>\n<h4 id="\"双线性群运算\""><a href="\"#双线性群运算\"" class="\"headerlink\"" title="\"双线性群运算" :\"=""></a>双线性群运算 :</h4><ul>\n<li>指数群 Zr的加法和乘法</li>\n<li>双线性群$G_1$,$G_2$的乘法和指数幂</li>\n<li>目标群$G_T$乘法和指数幂</li>\n<li>双线性群$G_1$,$G_2$映射到目标群$G_T$的对（Pairing）运算；</li>\n</ul>\n<h4 id="\"质数阶双线性群（Prime-Order-Bilinear-Groups）\""><a href="\"#质数阶双线性群（Prime-Order-Bilinear-Groups）\"" class="\"headerlink\"" title="\"质数阶双线性群（Prime-Order" bilinear="" groups）\"=""></a>质数阶双线性群（Prime-Order Bilinear Groups）</h4><p>给定一个大质数p，$G_1$,$G_2$,$G_T$ 均是阶为p的乘法循环群，e 为双线性映射 e : $G_1$ x $G_2$ -> $G_T$</p>\n<p>对称双线性映射: $G_1$ = $G_2$ 即 e : $G_1$ x $G_1$ -> $G_T$</p>\n<p>更多知识，请查阅相关文献和维基百科。</p>\n<h4 id="\"JPBC中的双线性\""><a href="\"#JPBC中的双线性\"" class="\"headerlink\"" title="\"JPBC中的双线性\""></a>JPBC中的双线性</h4><p>在JPBC中， G1,G2是乘法循环群。</p>\n<p>且G1,G2的元素都是一个个点坐标(基于椭圆曲线)，而$G_T$是$Z_p$中的一个数。</p>\n<h3 id="\"JPBC-使用\""><a href="\"#JPBC-使用\"" class="\"headerlink\"" title="\"JPBC" 使用\"=""></a>JPBC 使用</h3><h4 id="\"初始化\""><a href="\"#初始化\"" class="\"headerlink\"" title="\"初始化\""></a>初始化</h4><p>在所有操作之前， 都必须有对双线性群进行初始化。<a href="\"http://gas.dia.unisa.it/projects/jpbc/docs/pairing.html#.Vv8hsi594p8\"" target="\"_blank\"" rel="\"external\"">官方文档</a>对各个参数进行了详细说明。这里我使用A群， 建立 jpbc.properties 文件， 内容如下:</p>\n<pre><code>type=a\nq 8780710799663312522437781984754049815806883199414208211028653399266475630880222957078625179422662221423155858769582317459277713367317481324925129998224791\nh 12016012264891146079388821366740534204802954401251311822919615131047207289359704531102844802183906537786776\nr 730750818665451621361119245571504901405976559617\nexp2 159\nexp1 107\nsign1 1\nsign0 1\n</code></pre><p>参数说明:</p>\n<pre><code>- type : 指定椭圆曲线的种类\n- q : G群的阶数的比特长度\n</code></pre><h4 id="\"产生随机数\""><a href="\"#产生随机数\"" class="\"headerlink\"" title="\"产生随机数:\""></a>产生随机数:</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"comment\"">//随机产生一个Z_p群的元素</span></span><br><span class="\"line\"">Element Z_p = pairing.getZr().newRandomElement().getImmutable();</span><br><span class="\"line\""><span class="\"comment\"">//随机产生一个G_1群的元素</span></span><br><span class="\"line\"">Element G_1 = pairing.getG1().newRandomElement().getImmutable();</span><br><span class="\"line\""><span class="\"comment\"">//随机产生一个G_2群的元素</span></span><br><span class="\"line\"">Element G_2 = pairing.getG2().newRandomElement().getImmutable();</span><br><span class="\"line\""><span class="\"comment\"">//随机产生一个G_T群的元素</span></span><br><span class="\"line\"">Element G_T = pairing.getGT().newRandomElement().getImmutable();</span><br></pre></td></tr></table></figure>\n<h4 id="\"将指定的元素哈希到双线性群中\""><a href="\"#将指定的元素哈希到双线性群中\"" class="\"headerlink\"" title="\"将指定的元素哈希到双线性群中" :\"=""></a>将指定的元素哈希到双线性群中 :</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"comment\"">//将byte[] byteArray_Z_p哈希到Z_p群</span></span><br><span class="\"line\"">Element hash_Z_p = pairing.getZr().newElement().setFromHash(byteArray_Z_p, <span class="\"number\"">0</span>, byteArray_Z_p.length);</span><br><span class="\"line\""><span class="\"comment\"">//将byte[] byteArray_G_1哈希到G_1群</span></span><br><span class="\"line\"">Element hash_G_1 = pairing.getG1().newElement().setFromHash(byteArray_G_1, <span class="\"number\"">0</span>, byteArray_G_1.length);</span><br><span class="\"line\""><span class="\"comment\"">//将byte[] byteArray_G_2哈希到G_2群</span></span><br><span class="\"line\"">Element hash_G_2 = pairing.getG2().newElement().setFromHash(byteArray_G_2, <span class="\"number\"">0</span>, byteArray_G_2.length);</span><br><span class="\"line\""><span class="\"comment\"">//将byte[] byteArray_G_T哈希到G_T群</span></span><br><span class="\"line\"">Element hash_G_T = pairing.getGT().newElement().setFromHash(byteArray_G_T, <span class="\"number\"">0</span>, byteArray_G_T.length);</span><br></pre></td></tr></table></figure>\n<h4 id="\"双线性群的运算\""><a href="\"#双线性群的运算\"" class="\"headerlink\"" title="\"双线性群的运算\""></a>双线性群的运算</h4><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"comment\"">//初始化相关参数</span></span><br><span class="\"line\"">Element G_1 = pairing.getG1().newRandomElement().getImmutable();</span><br><span class="\"line\"">Element G_2 = pairing.getG2().newRandomElement().getImmutable();</span><br><span class="\"line\"">Element Z = pairing.getZr().newRandomElement().getImmutable();</span><br><span class="\"line\"">Element G_T = pairing.getGT().newRandomElement().getImmutable();</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">Element G_1_p = pairing.getG1().newRandomElement().getImmutable();</span><br><span class="\"line\"">Element G_2_p = pairing.getG2().newRandomElement().getImmutable();</span><br><span class="\"line\"">Element Z_p = pairing.getZr().newRandomElement().getImmutable();</span><br><span class="\"line\"">Element G_T_p = pairing.getGT().newRandomElement().getImmutable();</span><br><span class="\"line\"">\t</span><br><span class="\"line\""><span class="\"comment\"">//G_1的相关运算</span></span><br><span class="\"line\""><span class="\"comment\"">//G_1 multiply G_1</span></span><br><span class="\"line\"">Element G_1_m_G_1 = G_1.mul(G_1_p);</span><br><span class="\"line\""><span class="\"comment\"">//G_1 power Z</span></span><br><span class="\"line\"">Element G_1_e_Z = G_1.powZn(Z);</span><br><span class="\"line\"">\t</span><br><span class="\"line\""><span class="\"comment\"">//G_2的相关运算</span></span><br><span class="\"line\""><span class="\"comment\"">//G_2 multiply G_2</span></span><br><span class="\"line\"">Element G_2_m_G_2 = G_2.mul(G_2_p);</span><br><span class="\"line\""><span class="\"comment\"">//G_2 power Z</span></span><br><span class="\"line\"">Element G_2_e_Z = G_2.powZn(Z);</span><br><span class="\"line\"">\t</span><br><span class="\"line\""><span class="\"comment\"">//G_T的相关运算</span></span><br><span class="\"line\""><span class="\"comment\"">//G_T multiply G_T</span></span><br><span class="\"line\"">Element G_T_m_G_T = G_T.mul(G_T_p);</span><br><span class="\"line\""><span class="\"comment\"">//G_T power Z</span></span><br><span class="\"line\"">Element G_T_e_Z = G_T.powZn(Z);</span><br><span class="\"line\"">\t</span><br><span class="\"line\""><span class="\"comment\"">//Z的相关运算</span></span><br><span class="\"line\""><span class="\"comment\"">//Z add Z</span></span><br><span class="\"line\"">Element Z_a_Z = Z.add(Z_p);</span><br><span class="\"line\""><span class="\"comment\"">//Z multiply Z</span></span><br><span class="\"line\"">Element Z_m_Z = Z.mul(Z_p);</span><br><span class="\"line\"">\t</span><br><span class="\"line\""><span class="\"comment\"">//Pairing运算</span></span><br><span class="\"line\"">Element G_p_G = pairing.pairing(G_1, G_2);</span><br></pre></td></tr></table></figure>\n<h3 id="\"使用JPBC中，可能会需要用到的其它函数\""><a href="\"#使用JPBC中，可能会需要用到的其它函数\"" class="\"headerlink\"" title="\"使用JPBC中，可能会需要用到的其它函数:\""></a>使用JPBC中，可能会需要用到的其它函数:</h3><p>由于JPBC并不是一个完整的密码学库，仅仅实现了双线性映射相关的部分。在实现一些密码学算法的时候，需要用到一些其它函数，而这些函数的参数与JPBC的基本参数类型Element又不是匹配的，一开始并不知道直接调用toBytes()就行了，所以纠结了好久。</p>\n<p>我用一个Utils类封装了一些常用函数，以便后续调用:</p>\n<figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br><span class="\"line\"">38</span><br><span class="\"line\"">39</span><br><span class="\"line\"">40</span><br><span class="\"line\"">41</span><br><span class="\"line\"">42</span><br><span class="\"line\"">43</span><br><span class="\"line\"">44</span><br><span class="\"line\"">45</span><br><span class="\"line\"">46</span><br><span class="\"line\"">47</span><br><span class="\"line\"">48</span><br><span class="\"line\"">49</span><br><span class="\"line\"">50</span><br><span class="\"line\"">51</span><br><span class="\"line\"">52</span><br><span class="\"line\"">53</span><br><span class="\"line\"">54</span><br><span class="\"line\"">55</span><br><span class="\"line\"">56</span><br><span class="\"line\"">57</span><br><span class="\"line\"">58</span><br><span class="\"line\"">59</span><br><span class="\"line\"">60</span><br><span class="\"line\"">61</span><br><span class="\"line\"">62</span><br><span class="\"line\"">63</span><br><span class="\"line\"">64</span><br><span class="\"line\"">65</span><br><span class="\"line\"">66</span><br><span class="\"line\"">67</span><br><span class="\"line\"">68</span><br><span class="\"line\"">69</span><br><span class="\"line\"">70</span><br><span class="\"line\"">71</span><br><span class="\"line\"">72</span><br><span class="\"line\"">73</span><br><span class="\"line\"">74</span><br><span class="\"line\"">75</span><br><span class="\"line\"">76</span><br><span class="\"line\"">77</span><br><span class="\"line\"">78</span><br><span class="\"line\"">79</span><br><span class="\"line\"">80</span><br><span class="\"line\"">81</span><br><span class="\"line\"">82</span><br><span class="\"line\"">83</span><br><span class="\"line\"">84</span><br><span class="\"line\"">85</span><br><span class="\"line\"">86</span><br><span class="\"line\"">87</span><br><span class="\"line\"">88</span><br><span class="\"line\"">89</span><br><span class="\"line\"">90</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">public</span> <span class="\"class\""><span class="\"keyword\"">class</span> <span class="\"title\"">Utils</span> </span>{</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">    <span class="\"comment\"">/**</span><br><span class="\"line\"">     * 标准sha256加密</span><br><span class="\"line\"">     *</span><br><span class="\"line\"">     * <span class="\"doctag\"">@param</span> data</span><br><span class="\"line\"">     * <span class="\"doctag\"">@return</span> hash</span><br><span class="\"line\"">     */</span></span><br><span class="\"line\"">    <span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> <span class="\"keyword\"">byte</span>[] sha256(<span class="\"keyword\"">byte</span>[] data) {</span><br><span class="\"line\"">        <span class="\"comment\"">//Create a sha 256 of the message</span></span><br><span class="\"line\"">        SHA256Digest dgst = <span class="\"keyword\"">new</span> SHA256Digest();</span><br><span class="\"line\"">        dgst.reset();</span><br><span class="\"line\"">        dgst.update(data, <span class="\"number\"">0</span>, data.length);</span><br><span class="\"line\"">        <span class="\"keyword\"">int</span> digestSize = dgst.getDigestSize();</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] hash = <span class="\"keyword\"">new</span> <span class="\"keyword\"">byte</span>[digestSize];</span><br><span class="\"line\"">        dgst.doFinal(hash, <span class="\"number\"">0</span>);</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> hash;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> String <span class="\"title\"">bytesToHex</span><span class="\"params\"">(<span class="\"keyword\"">byte</span>[] bytes)</span> </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> org.apache.commons.codec.binary.Hex.encodeHexString(bytes);</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">    <span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> <span class="\"keyword\"">byte</span>[] hexToBytes(String s) {</span><br><span class="\"line\"">        <span class="\"keyword\"">int</span> len = s.length();</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] data = <span class="\"keyword\"">new</span> <span class="\"keyword\"">byte</span>[len / <span class="\"number\"">2</span>];</span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">int</span> i = <span class="\"number\"">0</span>; i < len; i += <span class="\"number\"">2</span>) {</span><br><span class="\"line\"">            data[i / <span class="\"number\"">2</span>] = (<span class="\"keyword\"">byte</span>) ((Character.digit(s.charAt(i), <span class="\"number\"">16</span>) << <span class="\"number\"">4</span>)</span><br><span class="\"line\"">                    + Character.digit(s.charAt(i + <span class="\"number\"">1</span>), <span class="\"number\"">16</span>));</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> data;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">    <span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> <span class="\"keyword\"">byte</span>[] xor(<span class="\"keyword\"">byte</span>[] a, <span class="\"keyword\"">byte</span>[] b) {</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] result = <span class="\"keyword\"">new</span> <span class="\"keyword\"">byte</span>[Math.min(a.length, b.length)];</span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">int</span> i = <span class="\"number\"">0</span>; i < result.length; i++) {</span><br><span class="\"line\"">            result[i] = (<span class="\"keyword\"">byte</span>) (((<span class="\"keyword\"">int</span>) a[i]) ^ ((<span class="\"keyword\"">int</span>) b[i]));</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> result;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">    <span class="\"comment\"">// 把一个byte[] 分拆成每段256字节的数组List</span></span><br><span class="\"line\"">    <span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> ArrayList<<span class="\"keyword\"">byte</span>[]> slice(<span class="\"keyword\"">byte</span>[] msg) {</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">        ArrayList<<span class="\"keyword\"">byte</span>[]> list = <span class="\"keyword\"">new</span> ArrayList<<span class="\"keyword\"">byte</span>[]>();</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">        <span class="\"comment\"">// 待优化</span></span><br><span class="\"line\"">        <span class="\"comment\"">// boxCount 表示分组数目</span></span><br><span class="\"line\"">        <span class="\"keyword\"">int</span> boxCount = ((msg.length % SystemParameter.SIZE) == <span class="\"number\"">0</span>)</span><br><span class="\"line\"">                ? (msg.length / SystemParameter.SIZE) :</span><br><span class="\"line\"">                ((msg.length / SystemParameter.SIZE) + <span class="\"number\"">1</span>);</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">int</span> i = <span class="\"number\"">0</span>; i < boxCount - <span class="\"number\"">1</span>; ++i) {</span><br><span class="\"line\"">            list.add(Arrays.copyOfRange(msg,</span><br><span class="\"line\"">                    i * SystemParameter.SIZE, (i + <span class="\"number\"">1</span>) * SystemParameter.SIZE));</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">        list.add(Arrays.copyOfRange(msg,</span><br><span class="\"line\"">                (boxCount - <span class="\"number\"">1</span>) * SystemParameter.SIZE, msg.length));</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> list;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">    <span class="\"comment\"">// 数组list组装成单个的byte[]</span></span><br><span class="\"line\"">    <span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> <span class="\"keyword\"">byte</span>[] splice(ArrayList<<span class="\"keyword\"">byte</span>[]> byteMessage) {</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">        <span class="\"keyword\"">int</span> boxCount = byteMessage.size();</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">        <span class="\"comment\"">// byteSum 表示总字节数大小</span></span><br><span class="\"line\"">        <span class="\"keyword\"">int</span> byteSum = (SystemParameter.SIZE * (boxCount - <span class="\"number\"">1</span>)) +</span><br><span class="\"line\"">                byteMessage.get(boxCount - <span class="\"number\"">1</span>).length;</span><br><span class="\"line\"">        <span class="\"keyword\"">byte</span>[] temp = <span class="\"keyword\"">new</span> <span class="\"keyword\"">byte</span>[byteSum];</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">int</span> i = <span class="\"number\"">0</span>; i < boxCount - <span class="\"number\"">1</span>; ++i) {</span><br><span class="\"line\"">            <span class="\"keyword\"">for</span> (<span class="\"keyword\"">int</span> t = <span class="\"number\"">0</span>; t < SystemParameter.SIZE; ++t) {</span><br><span class="\"line\"">                temp[i * SystemParameter.SIZE + t] = byteMessage.get(i)[t];</span><br><span class="\"line\"">            }</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">        <span class="\"keyword\"">for</span> (<span class="\"keyword\"">int</span> i = <span class="\"number\"">0</span>; i < byteMessage.get(boxCount - <span class="\"number\"">1</span>).length; ++i) {</span><br><span class="\"line\"">            temp[SystemParameter.SIZE * (boxCount - <span class="\"number\"">1</span>) + i] =</span><br><span class="\"line\"">                    byteMessage.get(boxCount - <span class="\"number\"">1</span>)[i];</span><br><span class="\"line\"">        }</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> temp;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">    <span class="\"function\""><span class="\"keyword\"">public</span> <span class="\"keyword\"">static</span> String <span class="\"title\"">toString</span><span class="\"params\"">(ArrayList<<span class="\"keyword\"">byte</span>[]> byteMessage)</span> </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> <span class="\"keyword\"">new</span> String(splice(byteMessage));</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">\t</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<p>上面包含了哈希和异或函数，以及一个把明文密文分拆给一个List以及组装回去的函数。</p>\n<h3 id="\"注意点\""><a href="\"#注意点\"" class="\"headerlink\"" title="\"注意点\""></a>注意点</h3><ol>\n<li>Java的运算结果都是产生一个新的Element来存储，所以我们需要把运算结果赋值给一个新的Element；</li>\n<li>Java在进行相关运算时，参与运算的Element值可能会改变。所以，如果需要在运算过程中保留参与运算的Element值，<br>在存储的时候一定要调用getImmutable()</li>\n<li>为了保险起见，防止Element在运算的过程中修改了Element原本的数值，可以使用Element.duplicate()方法。<br>这个方法将返回一个与Element数值完全一样的Element，但是是个新的Element对象。</li>\n</ol>\n<h3 id="\"参考资料\""><a href="\"#参考资料\"" class="\"headerlink\"" title="\"参考资料\""></a>参考资料</h3><p><a href="\"http://blog.csdn.net/liuweiran900217/article/details/45080653\"" target="\"_blank\"" rel="\"external\"">Java密码学原型算法实现——第三部分：双线性对</a></p>\n<p><a href="\"http://gas.dia.unisa.it/projects/jpbc/\"" target="\"_blank\"" rel="\"external\"">JPBC DOC</a></p>\n"},{"title":"Java IO 性能优化一个小实例","url":"https://joway.wang/posts/Java/2016-04-01-java-io-optimize.html","content":"<h3 id="\"现实需求\""><a href="\"#现实需求\"" class="\"headerlink\"" title="\"现实需求:\""></a>现实需求:</h3><ol>\n<li>把一个对象序列化，并保存至文件</li>\n<li>从文件中读出字节码并反序列化为对象</li>\n</ol>\n<a id="\"more\""></a>\n<h3 id="\"原代码\""><a href="\"#原代码\"" class="\"headerlink\"" title="\"原代码:\""></a>原代码:</h3><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br></pre></td><td class="\"code\""><pre><span class="\"line\"">FileInputStream fileIn = <span class="\"keyword\"">new</span> FileInputStream(filename);</span><br><span class="\"line\"">ObjectInputStream in = <span class="\"keyword\"">new</span> ObjectInputStream(fileIn);</span><br><span class="\"line\"">Object object = in.readObject();</span><br></pre></td></tr></table></figure>\n<p>读取 24M 图片平均花费了 4000 ms 左右</p>\n<h3 id="\"优化\""><a href="\"#优化\"" class="\"headerlink\"" title="\"优化:\""></a>优化:</h3><figure class="\"highlight" java\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br></pre></td><td class="\"code\""><pre><span class="\"line\"">FileInputStream fileIn = <span class="\"keyword\"">new</span> FileInputStream(filename);</span><br><span class="\"line\"">ObjectInputStream in = <span class="\"keyword\"">new</span> ObjectInputStream(</span><br><span class="\"line\"">        <span class="\"keyword\"">new</span> BufferedInputStream(fileIn));</span><br><span class="\"line\"">Object object = in.readObject();</span><br></pre></td></tr></table></figure>\n<p>读取 24M 图片平均花费了 300 ms 左右</p>\n<h3 id="\"知其然，知其所以然\""><a href="\"#知其然，知其所以然\"" class="\"headerlink\"" title="\"知其然，知其所以然:\""></a>知其然，知其所以然:</h3><p>原本文件是一个个字节地读的， 使用了BufferedInputStream后，它会首先把一段文件读入缓存内。</p>\n<p>stackoverflow 里有人说 : <a href="\"http://stackoverflow.com/questions/23506651/why-is-inputstream-readobject-taking-so-much-of-time-reading-the-serialized-obje\"" target="\"_blank\"" rel="\"external\"">This will reduce I/O by a factor of 8.</a></p>\n"},{"title":"记一次解决Mac扬声器破音问题的神奇经历","url":"https://joway.wang/posts/Mac/2016-03-28-记一次解决Mac扬声器破音问题的神奇经历.html","content":"<p>在我昨天正兴致勃勃地听王健林牛津大学演讲的时候，突然扬声器出现了破音，捣鼓了半天开启了重启大法，又开启了重置NVRAM大法，然而都没有什么卵用，于是便怀疑是更新完 OSX 10.11.4 后的bug(妈的，苹果有几次软件更新是靠谱的吗，然而我还是忍不住会去跟风升级怎么破。。。)。<br><a id="\"more\""></a><br>然而 Mac 并不能回退系统，而且这个问题是在使用了11.4几天以后才出现的说明系统原因可能性并不会特别高，另外，我连启动声音都出现了破音，这就让我开始担心是不是硬件出了问题。然而我无非就是听王健林的时候声音开的大了点啊啊啊啊。。。WTF！！！</p>\n<p>心怀着侥幸，觉得硬件也没可能说坏就坏，又看到我三天前刚好Time Machine 备份过了一下，心一横，决定重新恢复系统啦。然而好不容易拉完屎沐完浴，回来发现还是原来的样子，WTF！！！</p>\n<p>念着晚上还得补作业，我已经完全放弃折腾了，何况网上所有中文，英文的方法都已经试了遍，心中已经断定是硬件出了问题。</p>\n<p>码农圈子里有句名言，如果一个bug你当下不能解决，那就去睡一觉，如果还不行，那就睡两觉。今天早上起来，无意中发现了Boom这个音效增强的软件，我完全是抱着软件测试的角度去玩的这个软件，然而当我调动均衡器的时候，神奇的事情发生了。。。破音没有了!!!!!!!!!</p>\n<p>作为音乐盲的我此刻完全不知道发生了什么，感觉找到了一个新大陆一样。我把均衡器的 125Hz - 500 Hz 的频段全部调到0，然后别的按照它最优的分布，刚好把破音的那个频段给屏蔽了，虽然在音质上会有些失真，然而对于我这种听音乐只是为了屏蔽环境噪音的屌丝来说完全没有分别。</p>\n<p><img src="\"https://dn-joway.qbox.me/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-28%2008.42.53.png\"" alt="\"\""></p>\n<p>在网上看到还多人出现了同样的破音问题且无法找到解决方案，如果你能够搜到这篇文章，希望这种靠软件增强来弥补硬件缺失的方法能给你带来帮助。</p>\n<p>之所以把这个过程写下来，是因为一方面这的确是一种可以惠及他人的解决方案，如果你搜过Mac破音的解决方案，你就会知道有多少人遇到过这个问题而现存可行的方案几乎寥寥无几，而且这些方案只是针对一部分情况的。另一方面，是我在这个过程中的体验，简直像极了平时修bug的过程:</p>\n<ol>\n<li>定位问题，找到是软件问题还是硬件问题，或者两者的可能性大小</li>\n<li>谷歌解决方案，中文搜尽搜英文，用经验和已有知识对每个方案来个Page Rank，按排序一个个试过去，并做好可回滚的备份</li>\n<li>无法找到现有方案， 睡一觉</li>\n<li>起来找灵感，既然无法切实解决问题，就去尽可能伪装解决了问题(打补丁)</li>\n<li>欧也，虽然有瑕疵，但是好歹领导暂时发现不了这个隐藏问题啦~</li>\n</ol>\n<p>对， 这就是典型的中国特色软件工程。。。 233333</p>\n"},{"title":"Hexo折腾记——统计与交互篇","url":"https://joway.wang/posts/Hexo/2016-03-25-hexo-analysis.html","content":"<h3 id="\"前言\""><a href="\"#前言\"" class="\"headerlink\"" title="\"前言\""></a>前言</h3><p>前面说到，由于天朝的网络原因， 导致 Google Analytics 和 Disqus 的js加载特别慢，但是又不能去掉最最基本的统计与用户交互功能，国内的百度统计和多说都做的很垃圾，多说其实还不错，就是评论者头像是加载原登陆站点的，不支持https，还老是发抽。偶然看到大神的 <a href="\"http://codevs.cn\"" target="\"_blank\"" rel="\"external\"">CodeVS</a> 用了Growing 来作统计分析，用了DaoVoice来进行用户反馈，觉得比谷歌分析友好多了，于是便拿来耍了几下。</p>\n<a id="\"more\""></a>\n<h3 id="\"配置Growing\""><a href="\"#配置Growing\"" class="\"headerlink\"" title="\"配置Growing\""></a>配置Growing</h3><p>网址 : <a href="\"https://growing.io\"" target="\"_blank\"" rel="\"external\"">Growing.io</a></p>\n<p>进去注册以后，它会让你选择平台(网站/安卓/ios)，选择网站(如果选择app，则要在app内编码)，分配给你一个js脚本，把它放在网页中就行了。</p>\n<p>我是放在模板文件的footer.ejs中。这样每个页面都会加载。</p>\n<p>growing 的优势在于，它不仅仅能统计用户的访问，还能统计用户什么时间点击了什么链结。</p>\n<p><img src="\"https://dn-joway.qbox.me/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-25%2019.52.18.png?imageView2/2/w/500\"" alt="\"\""></p>\n<h3 id="\"配置-DaoVoice\""><a href="\"#配置-DaoVoice\"" class="\"headerlink\"" title="\"配置" daovoice\"=""></a>配置 DaoVoice</h3><p>网址: <a href="\"http://dashboard.daovoice.io/#/get-started\"" target="\"_blank\"" rel="\"external\"">DaoVoice</a></p>\n<p>进入并登陆后，有如下页面:</p>\n<p><img src="\"https://dn-joway.qbox.me/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-25%2019.45.12.png?imageView2/2/w/500\"" alt="\"\""></p>\n<p>选择访客接入(除非你有自己的用户模块)</p>\n<p>待你把上面的js脚本放到网站上并生效后，会自动跳到下一步，然后就能在页面显示我博客右下角的小图标啦。~</p>\n<p>可以在后台配置图标样式，以及回复用户反馈~</p>\n<p>PS: DaoVoice并不能替代评论功能，但是可以作为一个不错的交(gao)友(ji)平台(虽然它本来是用来反馈意见的233333)</p>\n<h3 id="\"配置-OneApm\""><a href="\"#配置-OneApm\"" class="\"headerlink\"" title="\"配置" oneapm\"=""></a>配置 OneApm</h3><p>网址: <a href="\"http://www.oneapm.com/\"" target="\"_blank\"" rel="\"external\"">oneapm</a></p>\n<p>一个很好的分析应用和服务器性能详尽情况的工具，安装简单，即插即用</p>\n<p><img src="\"https://dn-joway.qbox.me/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-29%2018.05.31.png\"" alt="\"\""></p>\n<p><img src="\"https://dn-joway.qbox.me/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-29%2018.05.57.png\"" alt="\"\""></p>\n<p><img src="\"https://dn-joway.qbox.me/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-29%2018.06.15.png\"" alt="\"\""></p>\n<p><img src="\"https://dn-joway.qbox.me/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-29%2018.06.33.png\"" alt="\"\""></p>\n"},{"title":"Hexo 折腾记——自动部署篇","url":"https://joway.wang/posts/Hexo/2016-03-19-Hexo-deploy.html","content":"<h3 id="\"目标\""><a href="\"#目标\"" class="\"headerlink\"" title="\"目标:\""></a>目标:</h3><p>写完一键上传并部署。(一个命令完成)</p>\n<h3 id="\"详细流程\""><a href="\"#详细流程\"" class="\"headerlink\"" title="\"详细流程:\""></a>详细流程:</h3><p>上传图片至七牛，上传 deploy 文件至Github公开库 以及 博客源代码 至Github 私有库，Daocloud 检测到commit 自动构建镜像并自动更新应用。</p>\n<a id="\"more\""></a>\n<h3 id="\"实现\""><a href="\"#实现\"" class="\"headerlink\"" title="\"实现:\""></a>实现:</h3><ol>\n<li>在public目录下放置Dockerfile文件:</li>\n</ol>\n<figure class="\"highlight" docker\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">FROM</span> daocloud.io/nginx</span><br><span class="\"line\""><span class="\"keyword\"">COPY</span> ./ /usr/share/nginx/html</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>在Daocloud里，创建新的代码构建，并设置成检测到commit就自动构建，再用这个镜像创建新应用，并设置自动更新</p>\n</li>\n<li><p>hexo根目录下创建 update.sh </p>\n</li>\n</ol>\n<p>(Mac/Linux下需修改执行权限: sudo chown 755 ./update.sh， Windows 需改成对应的bat脚本)</p>\n<figure class="\"highlight" bash\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"meta\"">#!/bin/sh</span></span><br><span class="\"line\""><span class="\"comment\""># author: joway</span></span><br><span class="\"line\""><span class="\"comment\""># 如果参数个数不等于0</span></span><br><span class="\"line\""><span class="\"keyword\"">if</span> <span class="\"built_in\"">test</span> <span class="\"variable\"">$#</span> <span class="\"_\"">-gt</span> 0</span><br><span class="\"line\""><span class="\"keyword\"">then</span></span><br><span class="\"line\"">  <span class="\"keyword\"">if</span> <span class="\"built_in\"">test</span> <span class="\"variable\"">$1</span> = <span class="\"string\"">'-img'</span></span><br><span class="\"line\"">  <span class="\"keyword\"">then</span></span><br><span class="\"line\"">    <span class="\"built_in\"">cd</span> ./<span class="\"built_in\"">source</span>/photos/</span><br><span class="\"line\"">    node photo-tool.js</span><br><span class="\"line\"">    <span class="\"built_in\"">cd</span> ../../</span><br><span class="\"line\"">    <span class="\"built_in\"">echo</span> <span class="\"string\"">'Upload complete'</span></span><br><span class="\"line\"">  <span class="\"keyword\"">else</span></span><br><span class="\"line\"">    <span class="\"built_in\"">echo</span> <span class="\"string\"">'Parameter error'</span></span><br><span class="\"line\"">  <span class="\"keyword\"">fi</span></span><br><span class="\"line\""><span class="\"keyword\"">else</span></span><br><span class="\"line\"">  <span class="\"built_in\"">echo</span> <span class="\"string\"">'No image needs upload'</span></span><br><span class="\"line\""><span class="\"keyword\"">fi</span></span><br><span class="\"line\"">hexo clean</span><br><span class="\"line\"">hexo g && gulp</span><br><span class="\"line\"">hexo deploy</span><br><span class="\"line\"">git add .</span><br><span class="\"line\"">git commit -m <span class="\"string\"">'update backup'</span></span><br><span class="\"line\"">git push origin master</span><br></pre></td></tr></table></figure>\n<p>命令使用:</p>\n<pre><code class="\"bash\""> <span class="\"comment\""># 需要上传图片</span>\n./update.sh -img  \n<span class="\"comment\"">#图片没改动， 只上传站点文件</span>\n./update.sh\n</code></pre>\n<hr>\n<p>相关文章:</p>\n<p><a href="\"https://joway.wang/posts/Hexo/2016-03-18-hexo-base.html\"">Hexo折腾记——基本配置篇</a></p>\n<p><a href="\"https://joway.wang/posts/Hexo/2016-03-19-Hexo-optimize.html\"">Hexo折腾记——性能优化篇</a></p>\n"},{"title":"Hexo折腾记——性能优化篇","url":"https://joway.wang/posts/Hexo/2016-03-19-Hexo-optimize.html","content":"<p>折腾Hexo的本来目的就是为了学习把性能优化到极致，由于水平有限，这里牵涉到的所谓的性能优化仅仅只是一些表面工夫，并不牵涉非常细节的前端性能。</p>\n<p>另外，由于我朝特殊的网络环境，我使用的谷歌分析，以及Disqus 均会导致出现因时因地因运营商而异的发抽状况，故而所有速度测试均在排除这些干扰下进行的。</p>\n<a id="\"more\""></a>\n<h3 id="\"静态文件压缩\""><a href="\"#静态文件压缩\"" class="\"headerlink\"" title="\"静态文件压缩\""></a>静态文件压缩</h3><p>静态文件包括: html,css,js,images . 我才用了gulp来跑自动压缩任务 。具体方法如下:</p>\n<ol>\n<li>npm 安装如下工具, 方法皆为 : npm install xxx –save</li>\n</ol>\n<figure class="\"highlight\""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br></pre></td><td class="\"code\""><pre><span class="\"line\"">\"gulp\": \"^3.9.1\",</span><br><span class="\"line\"">\"gulp-htmlclean\": \"^2.7.6\",</span><br><span class="\"line\"">\"gulp-htmlmin\": \"^1.3.0\",</span><br><span class="\"line\"">\"gulp-imagemin\": \"^2.4.0\",</span><br><span class="\"line\"">\"gulp-minify-css\": \"^1.2.4\",</span><br><span class="\"line\"">\"gulp-uglify\": \"^1.5.3\",</span><br></pre></td></tr></table></figure>\n<ol>\n<li>建立 gulpfile.js 文件</li>\n</ol>\n<figure class="\"highlight" js\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br><span class="\"line\"">38</span><br><span class="\"line\"">39</span><br><span class="\"line\"">40</span><br><span class="\"line\"">41</span><br><span class="\"line\"">42</span><br><span class="\"line\"">43</span><br><span class="\"line\"">44</span><br><span class="\"line\"">45</span><br><span class="\"line\"">46</span><br><span class="\"line\"">47</span><br><span class="\"line\"">48</span><br><span class="\"line\"">49</span><br><span class="\"line\"">50</span><br><span class="\"line\"">51</span><br><span class="\"line\"">52</span><br><span class="\"line\"">53</span><br><span class="\"line\"">54</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">var</span> gulp = <span class="\"built_in\"">require</span>(<span class="\"string\"">'gulp'</span>);</span><br><span class="\"line\""><span class="\"keyword\"">var</span> minifycss = <span class="\"built_in\"">require</span>(<span class="\"string\"">'gulp-minify-css'</span>);</span><br><span class="\"line\""><span class="\"keyword\"">var</span> uglify = <span class="\"built_in\"">require</span>(<span class="\"string\"">'gulp-uglify'</span>);</span><br><span class="\"line\""><span class="\"keyword\"">var</span> htmlmin = <span class="\"built_in\"">require</span>(<span class="\"string\"">'gulp-htmlmin'</span>);</span><br><span class="\"line\""><span class="\"keyword\"">var</span> htmlclean = <span class="\"built_in\"">require</span>(<span class="\"string\"">'gulp-htmlclean'</span>);</span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">// 获取 gulp-imagemin 模块</span></span><br><span class="\"line\""><span class="\"keyword\"">var</span> imagemin = <span class="\"built_in\"">require</span>(<span class="\"string\"">'gulp-imagemin'</span>)</span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">// 压缩 public 目录 css</span></span><br><span class="\"line\"">gulp.task(<span class="\"string\"">'minify-css'</span>, <span class="\"function\""><span class="\"keyword\"">function</span>(<span class="\"params\""></span>) </span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">return</span> gulp.src(<span class="\"string\"">'./public/**/*.css'</span>)</span><br><span class="\"line\"">        .pipe(minifycss())</span><br><span class="\"line\"">        .pipe(gulp.dest(<span class="\"string\"">'./public'</span>));</span><br><span class="\"line\"">});</span><br><span class="\"line\""><span class="\"comment\"">// 压缩 public 目录 html</span></span><br><span class="\"line\"">gulp.task(<span class="\"string\"">'minify-html'</span>, <span class="\"function\""><span class="\"keyword\"">function</span>(<span class="\"params\""></span>) </span>{</span><br><span class="\"line\"">  <span class="\"keyword\"">return</span> gulp.src(<span class="\"string\"">'./public/**/*.html'</span>)</span><br><span class="\"line\"">    .pipe(htmlclean())</span><br><span class="\"line\"">    .pipe(htmlmin({</span><br><span class="\"line\"">         removeComments: <span class="\"literal\"">true</span>,</span><br><span class="\"line\"">         minifyJS: <span class="\"literal\"">true</span>,</span><br><span class="\"line\"">         minifyCSS: <span class="\"literal\"">true</span>,</span><br><span class="\"line\"">         minifyURLs: <span class="\"literal\"">true</span>,</span><br><span class="\"line\"">    }))</span><br><span class="\"line\"">    .pipe(gulp.dest(<span class="\"string\"">'./public'</span>))</span><br><span class="\"line\"">});</span><br><span class="\"line\""><span class="\"comment\"">// 压缩 public/js 目录 js</span></span><br><span class="\"line\"">gulp.task(<span class="\"string\"">'minify-js'</span>, <span class="\"function\""><span class="\"keyword\"">function</span>(<span class="\"params\""></span>) </span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">return</span> gulp.src(<span class="\"string\"">'./public/**/*.js'</span>)</span><br><span class="\"line\"">        .pipe(uglify())</span><br><span class="\"line\"">        .pipe(gulp.dest(<span class="\"string\"">'./public'</span>));</span><br><span class="\"line\"">});</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">// 压缩图片任务</span></span><br><span class="\"line\""><span class="\"comment\"">// 在命令行输入 gulp images 启动此任务</span></span><br><span class="\"line\"">gulp.task(<span class="\"string\"">'images'</span>, <span class="\"function\""><span class="\"keyword\"">function</span> (<span class="\"params\""></span>) </span>{</span><br><span class="\"line\"">    <span class="\"comment\"">// 1. 找到图片</span></span><br><span class="\"line\"">    gulp.src(<span class="\"string\"">'./photos/*.*'</span>)</span><br><span class="\"line\"">    <span class="\"comment\"">// 2. 压缩图片</span></span><br><span class="\"line\"">        .pipe(imagemin({</span><br><span class="\"line\"">            progressive: <span class="\"literal\"">true</span></span><br><span class="\"line\"">        }))</span><br><span class="\"line\"">    <span class="\"comment\"">// 3. 另存图片</span></span><br><span class="\"line\"">        .pipe(gulp.dest(<span class="\"string\"">'dist/images'</span>))</span><br><span class="\"line\"">});</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">// 执行 gulp 命令时执行的任务</span></span><br><span class="\"line\"">gulp.task(<span class="\"string\"">'default'</span>, [</span><br><span class="\"line\"">    <span class="\"string\"">'minify-html'</span>,<span class="\"string\"">'minify-css'</span>,<span class="\"string\"">'minify-js'</span>,<span class="\"string\"">'images'</span></span><br><span class="\"line\"">]);</span><br></pre></td></tr></table></figure>\n<p>注意， 修改上面的各个目录为你的真实目录， ** 代表0或多个子目录</p>\n<ol>\n<li>执行 gulp ，即可自动压缩所有静态文件</li>\n</ol>\n<h3 id="\"CDN-接入\""><a href="\"#CDN-接入\"" class="\"headerlink\"" title="\"CDN" 接入\"=""></a>CDN 接入</h3><p>上面的静态文件压缩幅度有限，要先提升下载速率还需要CDN的支持 。 理论上最佳方案是把所有静态文件都放在CDN上，但是由于hexo各处都在调用内部的js/css，如果需要改动，工程量会比较大，后期维护也不是很方便。不知道以后Hexo会不会原生提供一个配置静态资源地址的选项。</p>\n<p>所以我这里只将图片放在了七牛CDN上，hexo 有一个七牛的插件 : hexo-qiniu-sync 。 但是不知道为什么， 我在我电脑上跑不来这个，我看网上也有人说这个插件有许多bug，于是我就自己写了个脚本(本来想写插件，但是并没有研究过hexo的插件该如何写，所以暂时放弃了，后期有时间尝试下吧)。</p>\n<p>我的需求很简单，我有一个相册的页面，里面可能会放许多图片，我只想要一个脚本，能过一键上传所有图片然后把url全部写进我的相册界面里。具体实现思路参见 <a href="\"\"">Hexo 折腾记(基本配置篇)</a> 。</p>\n<p>一键上传所有文件至七牛的Node 脚本在Github上: <a href="\"https://github.com/joway/qiniu_upload_node\"" target="\"_blank\"" rel="\"external\"">https://github.com/joway/qiniu_upload_node</a></p>\n<h3 id="\"InstantClick-黑科技\""><a href="\"#InstantClick-黑科技\"" class="\"headerlink\"" title="\"InstantClick" 黑科技\"=""></a>InstantClick 黑科技</h3><p>说到性能优化，有一个黑科技虽然不是特别优雅，但是提升的速度却是立杆见影且惊人的，那就是 InstantClick 。</p>\n<p>InstantClick 的思路非常巧妙，它利用鼠标点击链接前的短暂时间(统计说是平均400ms)进行预加载，从而在感观上实现了迅速打开页面的效果。当你在打开页面的时候，其实页面已经加载到本地了，也就会很快能个完成渲染。</p>\n<p>InstantClick 并不能滥用，许多js无法与它兼容，比如 谷歌分析，百度统计，另外还有fancybox 。故而它有两种启用方式:</p>\n<ol>\n<li>白名单方式:</li>\n</ol>\n<p>初始化:</p>\n<figure class="\"highlight" html\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">script</span> <span class="\"attr\"">src</span>=<span class="\"string\"">\"instantclick.min.js\"</span><span class="\"string\"">data-no-instant</span>></span><span class="\"undefined\""></span><span class="\"tag\"">script</span>></span><br><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">script</span> <span class="\"attr\"">data-no-instant</span>></span><span class="\"javascript\"">InstantClick.init(<span class="\"literal\"">true</span>);</span><span class="\"tag\"">script</span>></span><br></pre></td></tr></table></figure>\n<p>针对具体每个链接启动:</p>\n<figure class="\"highlight" html\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">a</span> <span class="\"attr\"">href</span>=<span class="\"string\"">\"/blog/\"</span> <span class="\"attr\"">data-instant</span>></span>Blog<span class="\"tag\"">a</span>></span><br></pre></td></tr></table></figure>\n<ol>\n<li>黑名单方式:</li>\n</ol>\n<p>初始化，以及解决部分js无法加载的问题:</p>\n<figure class="\"highlight" html\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">script</span> <span class="\"attr\"">src</span>=<span class="\"string\"">\"/js/instantclick.min.js\"</span> <span class="\"attr\"">data-no-instant</span>></span><span class="\"undefined\""></span><span class="\"tag\"">script</span>></span><br><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">script</span> <span class="\"attr\"">data-no-instant</span>></span><span class="\"javascript\""></span><br><span class="\"line\"">InstantClick.on(<span class="\"string\"">'change'</span>, <span class="\"function\""><span class="\"keyword\"">function</span>(<span class="\"params\"">isInitialLoad</span>) </span>{</span><br><span class="\"line\"">  <span class="\"keyword\"">if</span> (isInitialLoad === <span class="\"literal\"">false</span>) {</span><br><span class="\"line\"">    <span class="\"keyword\"">if</span> (<span class="\"keyword\"">typeof</span> MathJax !== <span class="\"string\"">'undefined'</span>) <span class="\"comment\"">// support MathJax</span></span><br><span class="\"line\"">      MathJax.Hub.Queue([<span class="\"string\"">\"Typeset\"</span>,MathJax.Hub]);</span><br><span class="\"line\"">    <span class="\"keyword\"">if</span> (<span class="\"keyword\"">typeof</span> prettyPrint !== <span class="\"string\"">'undefined'</span>) <span class="\"comment\"">// support google code prettify</span></span><br><span class="\"line\"">      prettyPrint();</span><br><span class="\"line\"">    <span class="\"keyword\"">if</span> (<span class="\"keyword\"">typeof</span> _hmt !== <span class="\"string\"">'undefined'</span>)  <span class="\"comment\"">// support 百度统计</span></span><br><span class="\"line\"">      _hmt.push([<span class="\"string\"">'_trackPageview'</span>, location.pathname + location.search]);</span><br><span class="\"line\"">    <span class="\"keyword\"">if</span> (<span class="\"keyword\"">typeof</span> ga !== <span class="\"string\"">'undefined'</span>)  <span class="\"comment\"">// support google analytics</span></span><br><span class="\"line\"">        ga(<span class="\"string\"">'send'</span>, <span class="\"string\"">'pageview'</span>, location.pathname + location.search);</span><br><span class="\"line\"">  }</span><br><span class="\"line\"">});</span><br><span class="\"line\"">InstantClick.init();</span><br><span class="\"line\""></span><span class="\"tag\"">script</span>></span><br></pre></td></tr></table></figure>\n<p>这时候对于所有链接都开启 预加载模式，但是可以针对部分链接假如黑名单:</p>\n<figure class="\"highlight" html\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">a</span> <span class="\"attr\"">href</span>=<span class="\"string\"">\"/blog/\"</span> <span class="\"attr\"">data-no-instant</span>></span>Blog<span class="\"tag\"">a</span>></span><br></pre></td></tr></table></figure>\n<p>这里我遇到的一个坑是，我的相册使用了fancybox，而对于InstantClick死活无法解决fancybox的问题(网上也没解决方案)，虽然我可以通过指定data-no-instant来达到不预加载的目的，但是hexo对于每个同级链接都是一样对待的，我如何让它单单对于相册不进行预加载呢?</p>\n<p>我能够想到的方法就是对导航栏的每一个url指定一个以其中文名(暂时不映射成英文)命名的id值，然后待页面渲染完了以后，对id值为’相册’的元素添加 data-no-instant 属性:</p>\n<figure class="\"highlight" html\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br></pre></td><td class="\"code\""><pre><span class="\"line\"">$(\"#相册\").attr(\"data-no-instant\",'');</span><br></pre></td></tr></table></figure>\n<p>有些时候这种加黑名单的方法也没用，那么就用最后一招，强制刷新（自己调试出来的，略土。。） :</p>\n<figure class="\"highlight" js\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"built_in\"">document</span>.getElementById(<span class="\"string\"">'相册'</span>).onclick = <span class="\"function\""><span class="\"keyword\"">function</span>(<span class="\"params\"">e</span>)</span>{</span><br><span class="\"line\""> \tlocation.href = <span class="\"built_in\"">document</span>.getElementById(<span class="\"string\"">'相册'</span>).href;</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h3 id="\"Nginx-优化配置\""><a href="\"#Nginx-优化配置\"" class="\"headerlink\"" title="\"Nginx" 优化配置\"=""></a>Nginx 优化配置</h3><p>Gzip压缩:</p>\n<figure class="\"highlight" plain\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br></pre></td><td class="\"code\""><pre><span class="\"line\"">http {</span><br><span class="\"line\"">    gzip               on;</span><br><span class="\"line\"">    gzip_vary          on;</span><br><span class="\"line\""></span><br><span class="\"line\"">    gzip_comp_level    6;</span><br><span class="\"line\"">    gzip_buffers       16 8k;</span><br><span class="\"line\""></span><br><span class="\"line\"">    gzip_min_length    1000;</span><br><span class="\"line\"">    gzip_proxied       any;</span><br><span class="\"line\"">    gzip_disable       \"msie6\";</span><br><span class="\"line\""></span><br><span class="\"line\"">    gzip_http_version  1.0;</span><br><span class="\"line\""></span><br><span class="\"line\"">    gzip_types         text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;</span><br><span class="\"line\"">    ... ...</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h3 id="\"搜索引擎优化-SEO\""><a href="\"#搜索引擎优化-SEO\"" class="\"headerlink\"" title="\"搜索引擎优化(SEO)\""></a>搜索引擎优化(SEO)</h3><p>添加百度主动推送代码，让搜索引擎最快发现文章 .</p>\n<p>方法: 在 <博客根目录>/themes/yilia/layout/_partial/article.ejs 的尾部评论位置, 添加:</博客根目录></p>\n<figure class="\"highlight" html\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">%</span> <span class="\"attr\"">if</span> (!<span class="\"attr\"">index</span>){ %></span></span><br><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">script</span>></span><span class="\"javascript\""></span><br><span class="\"line\"">(<span class="\"function\""><span class="\"keyword\"">function</span>(<span class="\"params\""></span>)</span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">var</span> bp = <span class="\"built_in\"">document</span>.createElement(<span class="\"string\"">'script'</span>);</span><br><span class="\"line\"">    bp.src = <span class="\"string\"">'//push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="\"line\"">    <span class="\"keyword\"">var</span> s = <span class="\"built_in\"">document</span>.getElementsByTagName(<span class="\"string\"">\"script\"</span>)[<span class="\"number\"">0</span>];</span><br><span class="\"line\"">    s.parentNode.insertBefore(bp, s);</span><br><span class="\"line\"">})();</span><br><span class="\"line\""></span><span class="\"tag\"">script</span>></span>     <br><span class="\"line\""><span class="\"tag\""><<span class="\"name\"">%</span> } %></span></span><br></pre></td></tr></table></figure>\n<p>之后，每次用户访问界面，都会去调用推送代码</p>\n<hr>\n<p>相关文章:</p>\n<p><a href="\"https://joway.wang/posts/Hexo/2016-03-18-hexo-base.html\"">Hexo折腾记——基本配置篇</a></p>\n<p><a href="\"https://joway.wang/posts/Hexo/2016-03-19-Hexo-deploy.html\"">Hexo折腾记——自动部署篇</a></p>\n"},{"title":"Hexo折腾记——基本配置篇","url":"https://joway.wang/posts/Hexo/2016-03-18-hexo-base.html","content":"<h3 id="\"前言\""><a href="\"#前言\"" class="\"headerlink\"" title="\"前言\""></a>前言</h3><p>人闲起来真是可怕，本来已经折腾过了jekyll和Ghost，静态和动态博客也都尝了遍鲜，然而还是按捺不住寂寞又折腾起来Hexo。话说我最早大概是两年前高考结束的时候知道的Hexo，那时在家里没事干想搭个博客玩，然后看见了jekyll和hexo，无奈那时候就一台windows，啥也不懂啥也不会，这两个博客工具楞是装不上去。而Jekyll的一个好处是可以不用在本地跑，Github 的Pages功能原生支持Jekyll，所以我只需要下载些别人的源文件，自己随便修改下，传到Github就能在线调试和运行了。</p>\n<a id="\"more\""></a>\n<p>这次尝试Hexo的另一个原因是，想重头学习下这些工具的原理和逻辑，另外再添加些可以将性能发挥到极致的黑科技(下文会有介绍)。</p>\n<p>至于Hexo如何安装配置，网上有太多教程了，可以直接按照文档操作 。 这里只作为进阶，列举一些进阶配置以及踩过的坑。</p>\n<p>PS ： 我用的Hexo 版本是3.2, 主题是 <a href="\"https://github.com/litten/hexo-theme-yilia\"" target="\"_blank\"" rel="\"external\"">yilia</a></p>\n<p>以下功能可能需要插件支持，我的package.json为:</p>\n<figure class="\"highlight" json\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br></pre></td><td class="\"code\""><pre><span class="\"line\"">{</span><br><span class="\"line\"">  <span class="\"attr\"">\"name\"</span>: <span class="\"string\"">\"hexo-site\"</span>,</span><br><span class="\"line\"">  <span class="\"attr\"">\"version\"</span>: <span class="\"string\"">\"0.0.0\"</span>,</span><br><span class="\"line\"">  <span class="\"attr\"">\"private\"</span>: <span class="\"literal\"">true</span>,</span><br><span class="\"line\"">  <span class="\"attr\"">\"hexo\"</span>: {</span><br><span class="\"line\"">    <span class="\"attr\"">\"version\"</span>: <span class="\"string\"">\"3.2.0\"</span></span><br><span class="\"line\"">  },</span><br><span class="\"line\"">  <span class="\"attr\"">\"dependencies\"</span>: {</span><br><span class="\"line\"">    <span class="\"attr\"">\"gulp\"</span>: <span class="\"string\"">\"^3.9.1\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"gulp-htmlclean\"</span>: <span class="\"string\"">\"^2.7.6\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"gulp-htmlmin\"</span>: <span class="\"string\"">\"^1.3.0\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"gulp-imagemin\"</span>: <span class="\"string\"">\"^2.4.0\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"gulp-minify-css\"</span>: <span class="\"string\"">\"^1.2.4\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"gulp-uglify\"</span>: <span class="\"string\"">\"^1.5.3\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo\"</span>: <span class="\"string\"">\"^3.2.0\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-deployer-git\"</span>: <span class="\"string\"">\"0.0.4\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-generator-archive\"</span>: <span class="\"string\"">\"^0.1.4\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-generator-category\"</span>: <span class="\"string\"">\"^0.1.3\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-generator-feed\"</span>: <span class="\"string\"">\"^1.0.2\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-generator-index\"</span>: <span class="\"string\"">\"^0.2.0\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-generator-sitemap\"</span>: <span class="\"string\"">\"^1.1.2\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-generator-tag\"</span>: <span class="\"string\"">\"^0.2.0\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-migrator-rss\"</span>: <span class="\"string\"">\"^0.1.2\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-renderer-ejs\"</span>: <span class="\"string\"">\"^0.2.0\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-renderer-marked\"</span>: <span class="\"string\"">\"^0.2.10\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-renderer-stylus\"</span>: <span class="\"string\"">\"^0.3.1\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"hexo-server\"</span>: <span class="\"string\"">\"^0.2.0\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"jgallery\"</span>: <span class="\"string\"">\"^1.5.4\"</span>,</span><br><span class="\"line\"">    <span class="\"attr\"">\"qiniu\"</span>: <span class="\"string\"">\"^6.1.9\"</span></span><br><span class="\"line\"">  }</span><br><span class="\"line\"">}</span><br></pre></td></tr></table></figure>\n<h3 id="\"文章永久链接\""><a href="\"#文章永久链接\"" class="\"headerlink\"" title="\"文章永久链接\""></a>文章永久链接</h3><p>默认文章链结是以: <a href="\"http://xxx.com/2015/07/06/your-title/\"" target="\"_blank\"" rel="\"external\"">http://xxx.com/2015/07/06/your-title/</a> 的格式的， 个人不是很喜欢这样的格式，而且末尾没有.html结尾有点动态页面的感觉，对搜索引擎是否友好也有疑问(如果你知道答案，请告诉我)，于是，我改成了 <a href="\"http://xxx.com/posts/programming/2016-03-18-hello-world.html\"" target="\"_blank\"" rel="\"external\"">http://xxx.com/posts/programming/2016-03-18-hello-world.html</a> 这样的格式，具体方法是在 根目录下的 _config.yml 文件里:</p>\n<pre><code>permalink: posts/:category/:year-:month-:day-:title.html\n</code></pre><h3 id="\"开启目录支持\""><a href="\"#开启目录支持\"" class="\"headerlink\"" title="\"开启目录支持\""></a>开启目录支持</h3><p>我本人并不是很喜欢以tag来分类文章的方式，但是hexo默认是以tag来分类的，于是我另外给它加了一个种类(Category)的选项，方法是在_config.yml 下:</p>\n<pre><code>default_category: uncategorized\ncategory_map:\n    编程: programming\n    生活: life\n    其他: other\n</code></pre><p>其中, category_map 是为了让url中尽量少出现中文，做的映射。 </p>\n<p>例如:<br>在文章开头，标柱目录为:</p>\n<pre><code>---\nxxx: xxx\ncategories: 编程\n---\n</code></pre><p>则在url中， 会变成: </p>\n<pre><code>.../posts/programming/xxx.html\n</code></pre><h3 id="\"文章目录\""><a href="\"#文章目录\"" class="\"headerlink\"" title="\"文章目录\""></a>文章目录</h3><p>默认不开启文章目录，若要开启:</p>\n<pre><code>---\nxxx: xxx\ntoc: true\n---\n</code></pre><p>会自动根据标题权重进行目录生成。显示在最右边。 如需要更改格式， 可去 …/yilia/layout/_partial/archive.ejs 中修改</p>\n<h3 id="\"相册\""><a href="\"#相册\"" class="\"headerlink\"" title="\"相册\""></a>相册</h3><p>一直很想要一个靠谱，方便，而且快捷的相册功能，以前用Jekyll的时候没弄懂如何动态生成界面，就直接用html写了一个相册界面，然后还用VC++写了一个windows下的把某个文件夹下所有图片名检索并自动生成相应的html相册页面的小工具，后来玩Ghost了， 天真地想把发布图片的功能集成到原生的管理面版上，然后最后还是失败了。</p>\n<p>这次折腾hexo，我下定决心了一定要把相册功能给实现了!(然后我就浪费了一个下午 :( </p>\n<p>一开始贪图方便，使用 yilian 主题 自带的 基于instagram API的相册展示功能，本来还想着如果instagram被墙，试试看反代它的地址来实现功能，后来发现我申请的client_id 死活不能用我也是醉了，最后腾了半天还弄不好我也就放弃了。</p>\n<p>于是想自己造轮子，思路很简单，把照片全部放在本地某个目录下，然后跑个Python或者Node脚本把所有文件上传到某个地方(github/七牛)，并把这些文件名全部保存为output.json 文件，之后相册页面通过get 这个json文件，来得到对应的所有照片url，生成界面。(这个流程参照了网上另一位仁兄的实现，然后我找不到链接了…下次找到了补充上来)</p>\n<p>看了下七牛的Node SDK 文档，发现都不用写多少代码，直接能照着文档用，于是改了改，放在本地一键运行，成功!</p>\n<p>一键上传七牛以及输出文件名json的代码如下:</p>\n<figure class="\"highlight" js\"=""><table><tr><td class="\"gutter\""><pre><span class="\"line\"">1</span><br><span class="\"line\"">2</span><br><span class="\"line\"">3</span><br><span class="\"line\"">4</span><br><span class="\"line\"">5</span><br><span class="\"line\"">6</span><br><span class="\"line\"">7</span><br><span class="\"line\"">8</span><br><span class="\"line\"">9</span><br><span class="\"line\"">10</span><br><span class="\"line\"">11</span><br><span class="\"line\"">12</span><br><span class="\"line\"">13</span><br><span class="\"line\"">14</span><br><span class="\"line\"">15</span><br><span class="\"line\"">16</span><br><span class="\"line\"">17</span><br><span class="\"line\"">18</span><br><span class="\"line\"">19</span><br><span class="\"line\"">20</span><br><span class="\"line\"">21</span><br><span class="\"line\"">22</span><br><span class="\"line\"">23</span><br><span class="\"line\"">24</span><br><span class="\"line\"">25</span><br><span class="\"line\"">26</span><br><span class="\"line\"">27</span><br><span class="\"line\"">28</span><br><span class="\"line\"">29</span><br><span class="\"line\"">30</span><br><span class="\"line\"">31</span><br><span class="\"line\"">32</span><br><span class="\"line\"">33</span><br><span class="\"line\"">34</span><br><span class="\"line\"">35</span><br><span class="\"line\"">36</span><br><span class="\"line\"">37</span><br><span class="\"line\"">38</span><br><span class="\"line\"">39</span><br><span class="\"line\"">40</span><br><span class="\"line\"">41</span><br><span class="\"line\"">42</span><br><span class="\"line\"">43</span><br><span class="\"line\"">44</span><br><span class="\"line\"">45</span><br><span class="\"line\"">46</span><br><span class="\"line\"">47</span><br><span class="\"line\"">48</span><br><span class="\"line\"">49</span><br><span class="\"line\"">50</span><br><span class="\"line\"">51</span><br><span class="\"line\"">52</span><br><span class="\"line\"">53</span><br><span class="\"line\"">54</span><br><span class="\"line\"">55</span><br><span class="\"line\"">56</span><br><span class="\"line\"">57</span><br><span class="\"line\"">58</span><br><span class="\"line\"">59</span><br><span class="\"line\"">60</span><br><span class="\"line\"">61</span><br><span class="\"line\"">62</span><br><span class="\"line\"">63</span><br><span class="\"line\"">64</span><br><span class="\"line\"">65</span><br><span class="\"line\"">66</span><br><span class="\"line\"">67</span><br><span class="\"line\"">68</span><br><span class="\"line\"">69</span><br><span class="\"line\"">70</span><br><span class="\"line\"">71</span><br><span class="\"line\"">72</span><br><span class="\"line\"">73</span><br><span class="\"line\"">74</span><br><span class="\"line\"">75</span><br><span class="\"line\"">76</span><br><span class="\"line\"">77</span><br><span class="\"line\"">78</span><br><span class="\"line\"">79</span><br><span class="\"line\"">80</span><br><span class="\"line\"">81</span><br><span class="\"line\"">82</span><br><span class="\"line\"">83</span><br><span class="\"line\"">84</span><br><span class="\"line\"">85</span><br><span class="\"line\"">86</span><br></pre></td><td class="\"code\""><pre><span class="\"line\""><span class="\"keyword\"">const</span> fs = <span class="\"built_in\"">require</span>(<span class="\"string\"">\"fs\"</span>);</span><br><span class="\"line\""><span class="\"keyword\"">const</span> path = <span class="\"string\"">\"../../photos\"</span>;</span><br><span class="\"line\""><span class="\"keyword\"">var</span> qiniu = <span class="\"built_in\"">require</span>(<span class="\"string\"">\"qiniu\"</span>);</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">//需要填写你的 Access Key 和 Secret Key</span></span><br><span class="\"line\"">qiniu.conf.ACCESS_KEY = <span class="\"string\"">'xxx'</span>;</span><br><span class="\"line\"">qiniu.conf.SECRET_KEY = <span class="\"string\"">'xxx'</span>;</span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">//要上传的空间</span></span><br><span class="\"line\"">bucket = <span class="\"string\"">'hexo'</span>;</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">//构建上传策略函数</span></span><br><span class="\"line\""><span class="\"function\""><span class="\"keyword\"">function</span> <span class="\"title\"">uptoken</span>(<span class="\"params\"">bucket, key</span>) </span>{</span><br><span class="\"line\"">  <span class="\"keyword\"">var</span> putPolicy = <span class="\"keyword\"">new</span> qiniu.rs.PutPolicy(bucket+<span class="\"string\"">\":\"</span>+key);</span><br><span class="\"line\"">  <span class="\"keyword\"">return</span> putPolicy.token();</span><br><span class="\"line\"">}</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">//构造上传函数</span></span><br><span class="\"line\""><span class="\"function\""><span class="\"keyword\"">function</span> <span class="\"title\"">uploadFile</span>(<span class="\"params\"">uptoken, key, localFile</span>) </span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">var</span> extra = <span class="\"keyword\"">new</span> qiniu.io.PutExtra();</span><br><span class="\"line\"">    qiniu.io.putFile(uptoken, key, localFile, extra, <span class="\"function\""><span class="\"keyword\"">function</span>(<span class="\"params\"">err, ret</span>) </span>{</span><br><span class="\"line\"">      <span class="\"keyword\"">if</span>(!err) {</span><br><span class="\"line\"">        <span class="\"comment\"">// 上传成功， 处理返回值</span></span><br><span class="\"line\"">        <span class="\"built_in\"">console</span>.log(<span class="\"string\"">'upload success : '</span>,ret.hash, ret.key);</span><br><span class="\"line\"">      } <span class="\"keyword\"">else</span> {</span><br><span class="\"line\"">        <span class="\"comment\"">// 上传失败， 处理返回代码</span></span><br><span class="\"line\"">        <span class="\"built_in\"">console</span>.log(err);</span><br><span class="\"line\"">      }</span><br><span class="\"line\"">  });</span><br><span class="\"line\"">}</span><br><span class="\"line\""></span><br><span class="\"line\""><span class="\"comment\"">/**</span><br><span class="\"line\""> * 读取文件后缀名称，并转化成小写</span><br><span class="\"line\""> * @param file_name</span><br><span class="\"line\""> * @returns</span><br><span class="\"line\""> */</span></span><br><span class="\"line\""><span class="\"function\""><span class="\"keyword\"">function</span> <span class="\"title\"">getFilenameSuffix</span>(<span class="\"params\"">file_name</span>) </span>{</span><br><span class="\"line\"">  <span class="\"keyword\"">if</span>(file_name==<span class="\"string\"">'.DS_Store'</span>){</span><br><span class="\"line\"">    <span class="\"keyword\"">return</span> <span class="\"string\"">'.DS_Store'</span>;</span><br><span class="\"line\"">  }</span><br><span class="\"line\"">    <span class="\"keyword\"">if</span> (file_name == <span class="\"literal\"">null</span> || file_name.length == <span class="\"number\"">0</span>)</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span> <span class="\"literal\"">null</span>;</span><br><span class="\"line\"">    <span class="\"keyword\"">var</span> result = <span class="\"regexp\"">/\\.[^\\.]+/</span>.exec(file_name);</span><br><span class="\"line\"">    <span class="\"keyword\"">return</span> result == <span class="\"literal\"">null</span> ? <span class="\"literal\"">null</span> : (result + <span class="\"string\"">\"\"</span>).toLowerCase();</span><br><span class="\"line\"">}</span><br><span class="\"line\""></span><br><span class="\"line\""></span><br><span class="\"line\"">fs.readdir(path, <span class="\"function\""><span class="\"keyword\"">function</span> (<span class="\"params\"">err, files</span>) </span>{</span><br><span class="\"line\"">    <span class="\"keyword\"">if</span> (err) {</span><br><span class="\"line\"">        <span class="\"keyword\"">return</span>;</span><br><span class="\"line\"">    }</span><br><span class="\"line\"">    <span class="\"keyword\"">var</span> arr = [];</span><br><span class="\"line\"">    (<span class="\"function\""><span class="\"keyword\"">function</span> <span class="\"title\"">iterator</span>(<span class="\"params\"">index</span>) </span>{</span><br><span class="\"line\"">        <span class="\"keyword\"">if</span> (index == files.length) {</span><br><span class="\"line\"">            fs.writeFile(<span class="\"string\"">\"./output.json\"</span>, <span class="\"built_in\"">JSON</span>.stringify(arr, <span class="\"literal\"">null</span>, <span class="\"string\"">\"\\t\"</span>));</span><br><span class="\"line\"">            <span class="\"keyword\"">return</span>;</span><br><span class="\"line\"">        }</span><br><span class="\"line\""></span><br><span class="\"line\"">        fs.stat(path + <span class="\"string\"">\"/\"</span> + files[index], <span class="\"function\""><span class="\"keyword\"">function</span> (<span class="\"params\"">err, stats</span>) </span>{</span><br><span class="\"line\"">            <span class="\"keyword\"">if</span> (err) {</span><br><span class="\"line\"">                <span class="\"keyword\"">return</span>;</span><br><span class="\"line\"">            }</span><br><span class="\"line\"">            <span class="\"keyword\"">if</span> (stats.isFile()) {</span><br><span class="\"line\"">              <span class="\"keyword\"">var</span> suffix = getFilenameSuffix(files[index]);</span><br><span class="\"line\"">              <span class="\"keyword\"">if</span>(!(suffix==<span class="\"string\"">'.js'</span>|| suffix == <span class="\"string\"">'.DS_Store'</span>)){</span><br><span class="\"line\"">                <span class="\"comment\"">//要上传文件的本地路径</span></span><br><span class="\"line\"">                filePath = path+<span class="\"string\"">'/'</span>+files[index];</span><br><span class="\"line\"">                <span class="\"built_in\"">console</span>.log(<span class="\"string\"">'抓取到文件: '</span>+files[index]);</span><br><span class="\"line\"">                <span class="\"comment\"">//上传到七牛后保存的文件名</span></span><br><span class="\"line\"">                key = files[index];</span><br><span class="\"line\"">                <span class="\"comment\"">//生成上传 Token</span></span><br><span class="\"line\"">                token = uptoken(bucket, key);</span><br><span class="\"line\"">                <span class="\"comment\"">// 异步执行</span></span><br><span class="\"line\"">                uploadFile(token, key, filePath);</span><br><span class="\"line\"">                arr.push(files[index]);</span><br><span class="\"line\"">            }</span><br><span class="\"line\""></span><br><span class="\"line\"">                      }</span><br><span class="\"line\"">            iterator(index + <span class="\"number\"">1</span>);</span><br><span class="\"line\"">        })</span><br><span class="\"line\"">    }(<span class="\"number\"">0</span>));</span><br><span class="\"line\"">});</span><br></pre></td></tr></table></figure>\n<h3 id="\"一键部署\""><a href="\"#一键部署\"" class="\"headerlink\"" title="\"一键部署\""></a>一键部署</h3><p>全局 _config.yml 中，设置:</p>\n<pre><code>deploy:\n  type: git\n  repository: https://github.com/joway/hexo-blog.git\n  branch: master\n</code></pre><p>执行</p>\n<pre><code>hexo deploy\n</code></pre><p>即可上传至git 仓库</p>\n<hr>\n<p>相关文章:</p>\n<p><a href="\"https://joway.wang/posts/Hexo/2016-03-19-Hexo-optimize.html\"">Hexo折腾记——性能优化篇</a></p>\n<p><a href="\"https://joway.wang/posts/Hexo/2016-03-19-Hexo-deploy.html\"">Hexo折腾记——自动部署篇</a></p>\n"},{"title":"我的滑板鞋-艺术-其它","url":"https://joway.wang/posts/随感/2016-02-01-我的滑板鞋-艺术-其它.html","content":"<blockquote>\n<p>有些事我都已忘记</p>\n<p>但我现在还记得</p>\n<p>在一个晚上 我的母亲问我</p>\n<p>今天怎么不开心</p>\n<p>我说在我的想象中 有一双滑板鞋</p>\n<a id="\"more\""></a>\n<p>与众不同最时尚 跳舞肯定棒</p>\n<p>整个城市找遍所有的街 都没有</p>\n<p>她说将来会找到的</p>\n<p>时间 时间 会给我答案</p>\n<p>星期天我再次寻找依然没有发现</p>\n<p>一个月后我去了第二个城市</p>\n<p>这里的人们称它为魅力之都</p>\n<p>时间过得很快夜幕就要降临</p>\n<p>我想我必须要离开</p>\n<p>当我正要走时我看到一家专卖店</p>\n<p>那就是我要的滑板鞋</p>\n<p>我的滑板鞋时尚时尚最时尚</p>\n<p>回家的路上我情不自禁</p>\n<p>摩擦 摩擦</p>\n<p>在这光滑的地上摩擦</p>\n<p>月光下我看到自己的身影</p>\n<p>有时很远有时很近</p>\n<p>感到一种力量驱使我的脚步</p>\n<p>有了滑板鞋 天黑都不怕</p>\n<p>一步两步 一步两步</p>\n<p>一步一步似爪牙</p>\n<p>是魔鬼的步伐</p>\n<p>摩擦 摩擦</p>\n<p>我给自己打着节拍</p>\n<p>这是我生命中美好的时刻</p>\n<p>我要完成我最喜欢的舞蹈</p>\n<p>在这美丽的月光下</p>\n<p>在这美丽的街道上</p>\n<p>我告诉自己这是真的 这不是梦</p>\n<p>一步两步 一步两步</p>\n<p>一步一步似爪牙</p>\n<p>是魔鬼的步伐</p>\n</blockquote>\n<p>当年<<我的滑板鞋>>刚出来的时候, 我和许多人一样, 都带着嘲讽看着这首歌, 看着这歌背后的那个杀马特青年 . 我以为它就和凤凰传奇那种是一路的货色. 后来<<人物>>杂志有一篇采访庞麦郎文章, 讲他如何违约,如何幼稚,如何土 , 我也就笑笑过去了 . </人物></我的滑板鞋></p>\n<p>昨天不知道如何就重新听到了这首歌, 瞬间被震撼了 . 尼尔.波兹曼说, 娱乐至死 . 毫无疑问, 这首歌就是一个大众娱乐出来的产物, 甚至于这个歌的编曲者就是论坛一个网友凑巧路过自娱自乐给谱的曲 . 但是娱乐并没有贬低这首歌的价值, 相反, 许多人听到这首歌的时候会去嘲笑, 但是仔细想想, 你真的是在嘲笑这首歌吗? 与韩寒的许多书一样, 这些东西或许在所谓的艺术上并没有多少技术含量, 也不应该得到那么多人的追捧. 但是从这些东西里, 其实我们都能够看到我们自己, 以及这个时代真切的样子 .  </p>\n<p>韩寒和庞麦郎都是小镇青年, 向着星辰大海奔跑 . 不同的是, 韩寒明显情商与智商更高于庞麦郎, 而庞麦郎只是至始至终都停留在了他小镇青年的桎梏里 . 庞麦郎自己也不想被桎梏于小镇, 甚至都不想桎梏于中国,  于是他谎称自己是台湾基隆人, 还要在MV里加入各种欧美元素, 还是典型的国内土豪意淫版本的欧美风 . 他在那些酷炫的MV里始终表情紧张, 不苟言笑, 与周围的那一切格格不入 .  相反在采访视频里 , 相对自然多了, 脸上也洋溢出自信与从容 . 我相信他自己也不喜欢浮夸风, 只是他从他所接触到的各种现代媒介中, 得到了只有浮夸才是高大上的这种印象, 所以他才要求搞成这样的浮夸. 他的浮夸都是假浮夸, 他不会玩那些大明星真浮夸的那套 .人们嘲讽他邯郸学步的假浮夸, 却趋之若鹜真浮夸 . </p>\n<p>我遇到过许多如庞麦郎一样的人 . 有一次坐公交车, 一个工地的小哥身上都是泥地坐在车上, 我能感受到别人对他的嫌弃, 也能感受到他的焦躁不安, 到站后, 他小心翼翼地把自己的座位擦得干干净净才下车 , 虽然这一切理论上都是他应该做的, 但是看到这种场景总会觉得心里难过. 还有一次, 我和一群在我们学校旁边造房子的工人走在一幢女生寝室楼下的马路上, 他们作为一个工人当然会很自然地去看旁边那些寝室楼, 更何况很有可能这楼本身就很有可能是他们盖的 . 但是正当他们在看的时候, 工人里的一个小伙子却阻止了他们, 说他们这样看女生宿舍会被人报警的 . 那时我听了也觉得特别难受, 但是仔细想想, 虽然女生宿舍的确是不能随便看的,  但是如果路上一群男大学生看, 大家可能觉得这就是青春, 换成是工人了就不行了, 还要报警了. 我相信那个工人一定是受到了足够多的白眼才会有这样的谨小慎微.</p>\n<p>我想庞麦郎就是这些人中的一员, 我自己也是这些人中的一员. 甚至于在我所得知到的许多资料中看来, 江泽民这样的人也是这些人中的一员.甚至于今天如此巨大的所谓的互联网浪潮, 创业浪潮又何尝不是一场空虚浮夸的寻找滑板鞋的运动 .  这个国家进行到这一步, 每个人或多或少, 或绝对或相对, 都会在这首歌里看到自己.  多疑, 自卑, 虚伪, 崇洋, 媚俗, 愚昧, 荒诞 .  </p>\n<p>我们学校旁边有一个阿里巴巴, 所谓的全球市值前几的公司, 它的建筑很现代, 很漂亮, 他每年能赚多少多少亿, 但是就在它几百米开外, 有一条街, 里面有最最中国农村特色的各种破烂小吃店,妓院按摩房, 情趣用品店, 廉价旅馆, 各色杂货店, 那里到处都在拆, 都在造, 路都没有一条平的. 我们每个人就生活在这种城乡结合部里.  即便你再怎么努力, 再怎么包装自己, 每座城市的光鲜角落里都会藏着一个你努力掩盖的自己, 一个破烂恶俗的真实 .</p>\n<p>我们以为滑板鞋能让自己跳舞更加好看,  的确我们买到了滑板鞋以后, 能有一群同样拥有了滑板鞋的圈子, 圈子里的人互相夸耀对方的鞋子真是漂亮 ,  只不过最后都忘记了当初要跳舞的事.  </p>\n<p>最近火的另外一首歌是上海彩虹室内合唱团的<<张士超你到底把我家钥匙放哪里了>> ,  用正经的方式演绎一个不正经的故事 . </张士超你到底把我家钥匙放哪里了></p>\n<p>这两件事让我想到, 安迪沃霍尔对于艺术的看法.  他把许多最最平民的东西都提升到了艺术的范畴里. 我在所接触到的仅有的艺术世界里, 许多东西看似高雅, 事实上在我个人的看法里, 和在一个小圈子里互相夸耀彼此的滑板鞋是有多么漂亮毫无区别 . 高雅不应当是高等的, 事实上, 今天许多微博下面的评论都可以作为一种艺术来欣赏 . 只是这些艺术都是零散的, 碎片的, 无法形成完整的概念 . </p>\n<p>20世纪以后, 技术的进步让艺术得到了走向平民的能力, 而艺术却很少去利用这一能力.  如果一样东西无法被欣赏, 是创作者的悲哀, 而非创作者的荣耀 . 何况平民的不一定就是低俗的, 即使它看起来很俗, 很口语, 但是人感受艺术的感情是真切的, 是和所谓的高雅艺术共通的. </p>\n<p>互联网技术起来后, 曾经所有的话语权权威都被打破. 艺术也瞬间登上了任人评说的舞台. 甚至于艺术的形态也开始百花齐放, 似乎一切稀罕的事都能够带一带艺术的帽子 . 我庆幸生在这样一个时代, 即便娱乐会让艺术死, 人类天然的创造力也不会让艺术断绝. </p>\n<p>其实我一直觉得未来的文化市场会被中国人承包, 这几乎已经会成为一定的事情了. 直到今天, 欧美的电视剧电影还在二战, 罗马, 中世纪这种耳熟能详的故事里打转, 鲜能发掘出更多更精彩的故事 . 而中国的文化崛起的时代还远远没有开始, 这片都是空的. 只要国家能够放开各种低智无耻的管治 , 政党能够注入更多年轻的血液. 甚至都不用等待中国人自己, 欧美如果能够有足够的谦虚也应该来”掠夺掠夺”这片广袤的土地. 毕竟 , 60多年里, 中共还真没在文化上做过多少好事,反而断子绝孙的事做了不少, 想必短时间的未来里也不会有什么希望. </p>\n<p>值得一提的是, 在YouTuBe的庞麦郎访谈下 ,  有个台湾人对庞麦郎说自己是台湾人表达抗议, 觉得大陆人理解的台湾人就是吃得起茶叶蛋, 高大上的代言词. 所以, 人口的确是有很多红利的, 格局和创造力就是一方面. 如果有一天墙能够开放, 我们强大的文化创作能力一定会比部分小粉红的污染能力走得更远, 更持久. 期待这一天. </p>\n"},{"title":"医生与工程师","url":"https://joway.wang/posts/随感/2016-01-16-医生与工程师.html","content":"<p>前几天看了一篇讲绝大部分码农配不上”工程师”这个title的文章，后来看到V2EX和知乎上都有讨论，甚至内核恐慌里也谈及了这篇文章。</p>\n<a id="\"more\""></a>\n<p>今天在医院里看着牙医专注地为我这副烂牙折腾了近一个小时，中途没有休息也没有放松，而且都是拿着一些诸如钻头和紫外线枪这种粗暴的装备操作着精细的牙齿。我突然就联想起之前的那篇文章，似乎瞬间明白了什么才配算是工程师。</p>\n<p>医生其实的确是一个挺让人心疼的职业，尤其是那些上手术台的医生。假如我写的每一行代码都会被人使用超过四五十年，而且它的质量好坏直接影响了别人的生活体验甚至生命安全，那么我想我每敲一个字手都是会在颤抖的。但是这事实上就是医生的正常工作内容，给人换个器官，修根神经，中途还不能休息，必须全神贯注。相比之下，码农至少停下来喝杯咖啡的时间还是有的，也只有极少部分时候会有惊心动魄的写码体验。</p>\n<p>回到那篇文章的内容，大概是在谈码农的工作其实大部分都没有很高的质量保证，即便是很多大的公司的产品也总是难以避免Bug和崩溃的缺陷。乍一看，其实还真的是如此。这个世界上正常规划设计过且建造过程严守规范的建筑很少会有过几年就塌陷的，但是几乎还找不到一个软件可以担保自己正常运转一年都不会出现一个差错。即便是支付宝、网银这样的产品，最多也只是通过技术手段保证了你不会莫名其妙少钱或者多钱，但是支付失败或者无法响应也是常有的事。很多程序员喜欢说在代码的世界里，只要写错一个符号都不能编译通过，圈外人可能看到这个会觉得代码就是精确无误的一样，事实上这就是种忽悠而已。</p>\n<p>当然，或许简单地把软件行业和建筑行业进行类比有点不公平，毕竟软件比建筑复杂得太多，参与人员也太多。但即便不谈稳定性，甚至不谈代码的优雅与否，简单以清晰干净的设计来讲，很多项目其实都是不符合要求的。这难怪会有人认为普通码农配不上工程师的头衔。</p>\n<p>我工程上并没有太多经验，写过太多烂代码，连当一个合格的码农都还欠火候，但是我还是以着成为一名合格工程师的理想在努力。并且我也觉得一个合格的工程师本身就有助于成为一个合格的人。</p>\n"}]